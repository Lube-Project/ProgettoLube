{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mattia/Desktop/lube/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../css/App.css';\nimport { DataGrid } from '@material-ui/data-grid';\nconst columns = [{\n  field: 'nome',\n  headerName: 'Nome',\n  width: 130\n}, {\n  field: 'data',\n  headerName: 'Data',\n  width: 130\n}, {\n  field: 'correttezza',\n  headerName: 'Correttezza',\n  width: 130\n}, {\n  field: 'dettagli',\n  headerName: 'Dettagli',\n  width: 130\n}];\n\nfunction Home() {\n  _s();\n\n  // viene eseguito appena viene caricata la pagina\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const [posts, setPosts] = useState([]); // chiamata fake per richiedere i dati \n\n  const fetchData = async () => {\n    const rawData = await fetch('https://jsonplaceholder.typicode.com/posts'); // adesso trasformo i dati ricevuti in json\n\n    const data = await rawData.json();\n    const posts = data.slice(0, 10); // con slice prendiamo solo i primi 10 elementi dell'array\n\n    console.log(posts);\n    setPosts(posts);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"HOME\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Carosello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"SITI | SOCIAL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), posts.map(post =>\n    /*#__PURE__*/\n\n    /*<Link key={post.id} to={`/${post.id}`}>\n      <h4 key={post.id} >{post.title}</h4>\n    </Link>*/\n    _jsxDEV(DataGrid, {\n      rows: pos,\n      columns: columns,\n      pageSize: 5,\n      checkboxSelection: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"FmHHdP/DG4Zc2FxlDvu87iblgf4=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/mattia/Desktop/lube/src/components/Home.js"],"names":["React","useState","useEffect","Link","DataGrid","columns","field","headerName","width","Home","fetchData","posts","setPosts","rawData","fetch","data","json","slice","console","log","map","post","pos"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,gBAAP;AACA,SAASC,QAAT,QAAyB,wBAAzB;AAEA,MAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,UAAU,EAAE,MAA7B;AAAqCC,EAAAA,KAAK,EAAE;AAA5C,CADc,EAEd;AAAEF,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,UAAU,EAAE,MAA7B;AAAqCC,EAAAA,KAAK,EAAE;AAA5C,CAFc,EAGd;AAAEF,EAAAA,KAAK,EAAE,aAAT;AAAwBC,EAAAA,UAAU,EAAE,aAApC;AAAmDC,EAAAA,KAAK,EAAE;AAA1D,CAHc,EAId;AAAEF,EAAAA,KAAK,EAAE,UAAT;AAAqBC,EAAAA,UAAU,EAAE,UAAjC;AAA6CC,EAAAA,KAAK,EAAE;AAApD,CAJc,CAAhB;;AAOA,SAASC,IAAT,GAAgB;AAAA;;AAEd;AACAP,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC,CAPc,CASd;;AACA,QAAMS,SAAS,GAAG,YAAY;AAC5B,UAAMG,OAAO,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAA3B,CAD4B,CAG5B;;AACA,UAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAnB;AAEA,UAAML,KAAK,GAAGI,IAAI,CAACE,KAAL,CAAW,CAAX,EAAc,EAAd,CAAd,CAN4B,CAMQ;;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AAEAC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GAVD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,EAMGA,KAAK,CAACS,GAAN,CAAUC,IAAI;AAAA;;AACb;AACR;AACA;AAEQ,YAAC,QAAD;AAAU,MAAA,IAAI,EAAEC,GAAhB;AAAqB,MAAA,OAAO,EAAEjB,OAA9B;AAAuC,MAAA,QAAQ,EAAE,CAAjD;AAAoD,MAAA,iBAAiB;AAArE;AAAA;AAAA;AAAA;AAAA,YALD,CANH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAvCQI,I;;KAAAA,I;AAyCT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../css/App.css';\nimport { DataGrid } from '@material-ui/data-grid';\n\nconst columns = [\n  { field: 'nome', headerName: 'Nome', width: 130 },\n  { field: 'data', headerName: 'Data', width: 130 },\n  { field: 'correttezza', headerName: 'Correttezza', width: 130 },\n  { field: 'dettagli', headerName: 'Dettagli', width: 130 },\n];\n\nfunction Home() {\n\n  // viene eseguito appena viene caricata la pagina\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const [posts, setPosts] = useState([]);\n\n  // chiamata fake per richiedere i dati \n  const fetchData = async () => {\n    const rawData = await fetch('https://jsonplaceholder.typicode.com/posts');\n\n    // adesso trasformo i dati ricevuti in json\n    const data = await rawData.json();\n\n    const posts = data.slice(0, 10);    // con slice prendiamo solo i primi 10 elementi dell'array\n    console.log(posts);\n\n    setPosts(posts);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>HOME</h1>\n\n      <h2>Carosello</h2>\n      <h2>SITI | SOCIAL</h2>\n\n      {posts.map(post => (\n        /*<Link key={post.id} to={`/${post.id}`}>\n          <h4 key={post.id} >{post.title}</h4>\n        </Link>*/\n\n        <DataGrid rows={pos} columns={columns} pageSize={5} checkboxSelection />\n\n      ))}\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}