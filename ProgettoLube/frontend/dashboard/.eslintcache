[{"/home/tommaso/PycharmProjects/ProgettoLube/ProgettoLube/frontend/dashboard/src/index.js":"1","/home/tommaso/PycharmProjects/ProgettoLube/ProgettoLube/frontend/dashboard/src/reportWebVitals.js":"2","/home/tommaso/PycharmProjects/ProgettoLube/ProgettoLube/frontend/dashboard/src/App.js":"3","/home/tommaso/PycharmProjects/ProgettoLube/ProgettoLube/frontend/dashboard/src/components/Navbar.js":"4","/home/tommaso/PycharmProjects/ProgettoLube/ProgettoLube/frontend/dashboard/src/components/Contact.js":"5","/home/tommaso/PycharmProjects/ProgettoLube/ProgettoLube/frontend/dashboard/src/components/Footer.js":"6","/home/tommaso/PycharmProjects/ProgettoLube/ProgettoLube/frontend/dashboard/src/components/Home.js":"7","/home/tommaso/PycharmProjects/ProgettoLube/ProgettoLube/frontend/dashboard/src/components/Mappa.js":"8","/home/tommaso/PycharmProjects/ProgettoLube/ProgettoLube/frontend/dashboard/src/components/DettagliReport.js":"9","/home/tommaso/PycharmProjects/ProgettoLube/ProgettoLube/frontend/dashboard/src/components/DettagliStore.js":"10","/home/tommaso/PycharmProjects/ProgettoLube/ProgettoLube/frontend/dashboard/src/components/Pallino.js":"11","/home/tommaso/PycharmProjects/ProgettoLube/ProgettoLube/frontend/dashboard/src/components/Button.js":"12"},{"size":500,"mtime":1608540043222,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1608540043222,"results":"15","hashOfConfig":"14"},{"size":1015,"mtime":1610659452044,"results":"16","hashOfConfig":"14"},{"size":2374,"mtime":1610444150656,"results":"17","hashOfConfig":"14"},{"size":177,"mtime":1609254580657,"results":"18","hashOfConfig":"14"},{"size":249,"mtime":1609751363411,"results":"19","hashOfConfig":"14"},{"size":23019,"mtime":1610660469793,"results":"20","hashOfConfig":"14"},{"size":3265,"mtime":1610660506587,"results":"21","hashOfConfig":"14"},{"size":3435,"mtime":1610660608390,"results":"22","hashOfConfig":"14"},{"size":25980,"mtime":1610660585995,"results":"23","hashOfConfig":"14"},{"size":163,"mtime":1610659452044,"results":"24","hashOfConfig":"14"},{"size":455,"mtime":1610660613768,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1gbojea",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":46,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":48,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/tommaso/PycharmProjects/ProgettoLube/ProgettoLube/frontend/dashboard/src/index.js",[],["54","55"],"/home/tommaso/PycharmProjects/ProgettoLube/ProgettoLube/frontend/dashboard/src/reportWebVitals.js",[],"/home/tommaso/PycharmProjects/ProgettoLube/ProgettoLube/frontend/dashboard/src/App.js",[],"/home/tommaso/PycharmProjects/ProgettoLube/ProgettoLube/frontend/dashboard/src/components/Navbar.js",["56","57","58"],"import React, { useState } from 'react';\n//import '../css/App.css';\nimport '../css/Navbar.css';\n\nimport { Link } from 'react-router-dom';\nimport logoLube from '../logoLube.png';\nimport { StepButton } from '@material-ui/core';\nimport {Button} from './Button';\n\n\nfunction Navbar() {\n  const [click,setClick]= useState(false);\n  const [button,setButton]= useState(true);\n\n  const handleClick=()=> setClick(!click);\n  const closeMobileMenu=()=>setClick(false);\n\n  const showButton=() =>{\n    if(window.innerWidth<=960){\n      setButton(false);\n    }else{\n      setButton(true);\n    }\n    }\n  \n  window.addEventListener(\"resize\",showButton);\n\n  const Logo = () => {\n    return <div className={button ? 'NavbarLogo' : 'NavbarLogoHidden'} >\n      <img src={logoLube} style={{ height: '100%', width: '20%' }} />\n     \n    </div>\n  }\n  \n  const Title= ()=> {\n  return <div className={button ? 'NavbarTitle' : 'NavbarTitleHidden'}> <Link style={{ color: '#fff', textDecoration: 'none' }} to=\"/\" >\n  <h1 style={{ fontSize: 65, fontFamily: 'Dancing Script'}}>Dashboard</h1>\n  </Link>\n  </div>\n  }\n  \n  return (\n    <div className=\"Navbar\">\n    \n    \n      <Logo />\n      <Title/>\n      <div className=\"menu-icon\" onClick={handleClick}>\n        <i className={click ? 'fas fa-times' : 'fas fa-bars'}/>\n      </div>\n\n      <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n        <Link style={{ color: '#fff', textDecoration: 'none' }} to=\"/\" onClick={closeMobileMenu}>\n          <li className=\"nav-item\">\n            Home</li>\n        </Link>\n        <Link style={{ color: '#fff', textDecoration: 'none' }} to=\"/mappa\" onClick={closeMobileMenu}>\n          <li className=\"nav-item\">\n            Mappa</li>\n        </Link>\n        <Link style={{ color: '#fff', textDecoration: 'none' }} to=\"/contact\" onClick={closeMobileMenu}>\n          <li className=\"nav-item\">\n            Contact</li>\n        </Link></ul>\n    </div>\n  );\n}\n\nexport default Navbar;\n\n//  .nav-menu {\n//    display: flex;\n//    flex-direction: column;\n//    width: 100%;\n//    height: 100.6%;\n//    position: absolute;\n//    top: 63px;\n//    left: 0;\n//    opacity: 1;\n//    transition: all 0.8s ease;\n//    z-index: 1;\n//  }\n//  .nav-menu.active {\n//    background: indianred;\n//    left: 90px;\n//    height: auto;\n//    padding-bottom: 5%;\n//    opacity: 1;\n//    transition: all 0.3s ease;\n//    z-index: 1;\n// }","/home/tommaso/PycharmProjects/ProgettoLube/ProgettoLube/frontend/dashboard/src/components/Contact.js",[],"/home/tommaso/PycharmProjects/ProgettoLube/ProgettoLube/frontend/dashboard/src/components/Footer.js",[],"/home/tommaso/PycharmProjects/ProgettoLube/ProgettoLube/frontend/dashboard/src/components/Home.js",["59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104"],"import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport '../css/App.css';\nimport TextField from \"@material-ui/core/TextField\";\nimport DatePicker from 'react-date-picker';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  DataGrid,\n  ColDef,\n  ValueGetterParams,\n  CellParams,\n  GridApi\n} from \"@material-ui/data-grid\";\n\nimport Carousel from 'react-elastic-carousel';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport axios from 'axios';\n//import { MDBDataTableV5 } from 'mdbreact';\n//import DatePicker from 'react-datepicker';\n//import \"react-datepicker/dist/react-datepicker.css\";\nimport { YearPicker, MonthPicker, DayPicker } from 'react-dropdown-date';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { Slider, RangeSlider, InputNumber, InputGroup, Row, Col } from 'rsuite';\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport Pallino from './Pallino.js';\nimport logoLube from '../logoLube.png';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  root: {\n    width: 300,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\n\n\n\nfunction Home() {\n\n  const classes = useStyles();\n\n\n  /* codice eseguito all'avvio della pagina */\n  useEffect(() => {\n    // fetchData();\n    //fetchPino();\n    fetchLastReports();\n    fetchResellerNames();\n  }, []);\n\n\n\n  /* chiamata VERA per richiedere i dati al server */\n  const fetchLastReports = async () => {\n    axios.get(`http://127.0.0.1:5000/reports/retrieveLastReports`)\n      .then(res => {\n        const reports = res.data.lista;\n        //console.log(reports);\n        const pino = [\n          {\n            field: \"\",\n            headerName: \"Bottone\",\n            sortable: false,\n            width: 200,\n            disableClickEventBubbling: true,\n            renderCell: (params: CellParams) => {\n              const onClick = () => {\n                const api: GridApi = params.api;\n                const fields = api\n                  .getAllColumns()\n                  .map((c) => c.field)\n                  .filter((c) => c !== \"__check__\" && !!c);\n                const thisRow = {};\n\n                fields.forEach((f) => {\n                  thisRow[f] = params.getValue(f);\n                });\n\n                let path = `/${thisRow.id}`;\n                return history.push(path);\n              };\n\n              return <Button onClick={onClick}>Dettagli</Button>;\n            }\n          },\n          { field: 'id', headerName: 'id', width: 400, hide: true },\n          { field: 'date', headerName: 'Data', width: 400 },\n          { field: 'name', headerName: 'Nome', width: 400 },\n          {\n            field: 'valutazione',\n            headerName: \"Valutazione\",\n            sortable: false,\n            width: '100%',\n            disableClickEventBubbling: true,\n            renderCell: (params: CellParams) => {\n              const api: GridApi = params.api;\n              const fields = api\n                .getAllColumns()\n                .map((c) => c.field)\n                .filter((c) => c !== \"__check__\" && !!c);\n              const thisRow = {};\n\n              fields.forEach((f) => {\n                thisRow[f] = params.getValue(f);\n              });\n\n              return thisRow.valutazione == 3 ? <div>🔴</div> : thisRow.valutazione == 2 ? <div>🟡</div> : thisRow.valutazione == 1 ? <div>🟢</div> : null ;\n            }\n          },\n        ];\n        setColumns(pino);\n        setReports(reports);\n\n      })\n\n  }\n\n  const fetchResellerNames = async () => {\n    axios.get(`http://127.0.0.1:5000/resellers/retrieveResellersNames`)\n      .then(res => {\n        const data = res.data;\n        // console.log(data.lista);\n        setStoreName(data.lista)\n      })\n\n  }\n\n  function feedRow() {\n    return reports;\n  }\n\n\n  function fetchReportAnnuali() {\n    //non ha selezionato il nome dello store\n    const pino = [\n      { field: 'id', headerName: 'Name', width: 400, },\n      { field: 'year', headerName: 'Anno', width: 400 },\n      {\n        field: 'valutazione',\n        headerName: \"Valutazione\",\n        sortable: false,\n        width: '100%',\n        disableClickEventBubbling: true,\n        renderCell: (params: CellParams) => {\n          const api: GridApi = params.api;\n          const fields = api\n            .getAllColumns()\n            .map((c) => c.field)\n            .filter((c) => c !== \"__check__\" && !!c);\n          const thisRow = {};\n\n          fields.forEach((f) => {\n            thisRow[f] = params.getValue(f);\n          });\n\n          return thisRow.valutazione == 3 ? <div>🔴</div> : thisRow.valutazione >= 2 && thisRow.valutazione <=2.9 ? <div>🟡</div> : thisRow.valutazione >= 1 && thisRow.valutazione <=1.9 ? <div>🟢</div> : null ;\n        }\n      },\n    ];\n    if (!value) {\n      axios.get(`http://127.0.0.1:5000/reports/retrieveYearAverage?year=${year}&range1=${range[0]}&range2=${range[1]}`)\n        .then(res => {\n          const reports = res.data.lista;\n          setReports(reports)\n        });\n      setColumns(pino);\n      return null;\n    } else {\n      axios.get(`http://127.0.0.1:5000/reports/retrieveYearAverageName?year=${year}&name=${value}&range1=${range[0]}&range2=${range[1]}`)\n        .then(res => {\n          const reports = res.data.lista;\n          setReports(reports);\n        });\n      setColumns(pino);\n      return null;\n    }\n  }\n  function fetchReportMensili() {\n    //non ha selezionato il nome dello store\n\n    const pino = [\n      { field: 'id', headerName: 'Name', width: 400, },\n      { field: 'year', headerName: 'Anno', width: 400 },\n      { field: 'month', headerName: 'Mese', width: 400 },\n      {\n        field: 'valutazione',\n        headerName: \"Valutazione\",\n        sortable: false,\n        width: '100%',\n        disableClickEventBubbling: true,\n        renderCell: (params: CellParams) => {\n          const api: GridApi = params.api;\n          const fields = api\n            .getAllColumns()\n            .map((c) => c.field)\n            .filter((c) => c !== \"__check__\" && !!c);\n          const thisRow = {};\n\n          fields.forEach((f) => {\n            thisRow[f] = params.getValue(f);\n          });\n\n          return thisRow.valutazione == 3 ? <div>🔴</div> : thisRow.valutazione >= 2 && thisRow.valutazione <=2.9 ? <div>🟡</div> : thisRow.valutazione >= 1 && thisRow.valutazione <=1.9 ? <div>🟢</div> : null ;\n        }\n      },\n    ];\n    if (!value) {\n      axios.get(`http://127.0.0.1:5000/reports/retrieveMonthYearAverage?year=${year}&month=${month}&range1=${range[0]}&range2=${range[1]}`)\n        .then(res => {\n          const reports = res.data.lista;\n          console.log(reports);\n          setReports(reports)\n        });\n      setColumns(pino);\n      return null;\n    } else {\n      axios.get(`http://127.0.0.1:5000/reports/retrieveMonthYearAverageName?year=${year}&month=${month}&name=${value}&range1=${range[0]}&range2=${range[1]}`)\n        .then(res => {\n          const reports = res.data.lista;\n          setReports(reports);\n        });\n      setColumns(pino);\n      return null;\n    }\n  }\n  function fetchReportDate() {\n\n\n    const pino = [\n      { field: 'id', headerName: 'Name', width: 350, },\n      { field: 'year', headerName: 'Anno', width: 250 },\n      { field: 'month', headerName: 'Mese', width: 250 },\n      { field: 'day', headerName: 'Giorno', width: 250 },\n      {\n        field: 'valutazione',\n        headerName: \"Valutazione\",\n        sortable: false,\n        width: '100%',\n        disableClickEventBubbling: true,\n        renderCell: (params: CellParams) => {\n          const api: GridApi = params.api;\n          const fields = api\n            .getAllColumns()\n            .map((c) => c.field)\n            .filter((c) => c !== \"__check__\" && !!c);\n          const thisRow = {};\n\n          fields.forEach((f) => {\n            thisRow[f] = params.getValue(f);\n          });\n\n          return thisRow.valutazione == 3 ? <div>🔴</div> : thisRow.valutazione == 2 ? <div>🟡</div> : thisRow.valutazione == 1 ? <div>🟢</div> : null ;\n        }\n      },\n    ];\n    if (!value) {\n      axios.get(`http://127.0.0.1:5000/reports/retrieveDayMonthYear?year=${date.getFullYear()}&month=${date.getMonth() + 1}&day=${date.getDate()}&range1=${range[0]}&range2=${range[1]}`)\n        .then(res => {\n          const reports = res.data.lista;\n          setReports(reports)\n        });\n      setColumns(pino);\n      return null;\n    } else {\n      axios.get(`http://127.0.0.1:5000/reports/retrieveDayMonthYearName?year=${date.getFullYear()}&month=${date.getMonth() + 1}&day=${date.getDate()}&name=${value}&range1=${range[0]}&range2=${range[1]}`)\n        .then(res => {\n          const reports = res.data.lista;\n          setReports(reports);\n        });\n      setColumns(pino);\n      return null;\n    }\n  }\n\n\n  /* Hooks */\n  const [posts, setPosts] = useState([]);\n  const [storeName, setStoreName] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [drop, setDrop] = useState([]);\n  const [value, setValue] = React.useState();\n  const [siti, setSiti] = useState([]);\n  const [datatable, setDatatable] = useState({});\n  const [reports, setReports] = useState([]);\n  const [choice, setChoice] = React.useState('');\n  const [date, setDate] = useState(new Date());\n  const [range, setRange] = useState([1, 3]);\n  const [columns, setColumns] = useState([]);\n\n  const [click, setClick] = useState(false);\n  const [button, setButton] = useState(true);\n\n\n\n\n  const [year, setYear] = useState(0);\n  const [month, setMonth] = useState(0);\n  const [viewmonth, setViewmonth] = useState();\n\n  /* Variabili */\n  const history = useHistory();\n  const list = [];\n  var sito;\n  // function lista(key, value, text) { // costruttore\n  //   this.key = value;\n  //   this.value = value;\n  //   this.text = text;\n  // };\n  const handleChange = (event) => {\n    setChoice(event.target.value);\n  };\n\n\n  const handleClick = () => setClick(!click);\n  const closeMobileMenu = () => setClick(false);\n\n  const showButton = () => {\n    if (window.innerWidth <= 960) {\n      setButton(false);\n    } else {\n      setButton(true);\n    }\n  }\n\n  window.addEventListener(\"resize\", showButton);\n  /* Liste */\n  /*const columns = [\n    {\n      field: \"\",\n      headerName: \"Button\",\n      sortable: false,\n      width: 100,\n      disableClickEventBubbling: true,\n      renderCell: (params: CellParams) => {\n        const onClick = () => {\n          const api: GridApi = params.api;\n          const fields = api\n            .getAllColumns()\n            .map((c) => c.field)\n            .filter((c) => c !== \"__check__\" && !!c);\n          const thisRow = {};\n\n          fields.forEach((f) => {\n            thisRow[f] = params.getValue(f);\n          });\n\n          let path = `/${thisRow.id}`;\n          return history.push(path);\n        };\n\n        return <Button onClick={onClick}>Dettagli</Button>;\n      }\n    },\n    { field: 'id', headerName: 'id', width: 200, hide: true },\n    { field: 'date', headerName: 'Data', width: 200 },\n    { field: 'name', headerName: 'Nome', width: 200 },\n    { field: 'valutazione', headerName: 'Valutazione', width: '100%' },\n  ];*/\n\n  /* creo la lista per il search selection */\n  // posts.map(post => (\n  //   sito = new lista(post.userId, post.id, post.title),\n  //   list.push(sito)\n  // ));\n\n  /* carosello */\n  const handleSelect = (selectedIndex, e) => {\n    setIndex(selectedIndex);\n  };\n\n  function FormLastReports() {\n    return (\n      <div className=\"RicercaAnnuale\">\n        <Button\n          // onClick={fetchReportAnnuali()}\n          onClick={() => { fetchLastReports() }}\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          endIcon={<SearchIcon />}\n        >\n          Cerca\n      </Button>\n      </div>\n    );\n  }\n\n  function FormAnnuale() {\n    return (\n      <div className=\"RicercaAnnuale\">\n\n        <Autocomplete\n          placeholder='Seleziona Sito'\n          value={value}\n          onChange={(event, newValue) => {\n            setValue(newValue);\n          }}\n          id=\"controllable-states-demo\"\n          options={storeName}\n          style={{ width: '20%' }}\n          renderInput={(params) => <TextField {...params} label=\"Seleziona sito\" variant=\"outlined\" />}\n        />\n\n        <Row>\n          <Col md={10}>\n            <RangeSlider\n\n              step={0.1}\n              max={3}\n              min={1}\n              progress\n              style={{ marginTop: 16, marginBottom: 16, width: \"10vw\" }}\n              value={range}\n              onChange={value => {\n                if (value[0] <= value[1]) {\n                  setRange(value);\n                  // console.log(range)\n                }\n              }}\n            />\n          </Col>\n          <Col md={8}>\n            <InputGroup\n              style={{ width: \"15vw\" }}\n            >\n              <InputNumber\n                min={1}\n                max={3}\n                value={range[0]}\n                onChange={nextValue => {\n                  const [start, end] = range;\n                  if (nextValue > end) {\n                    return;\n                  }\n                  setRange([nextValue, end]);\n                }}\n              />\n              <InputGroup.Addon>to</InputGroup.Addon>\n              <InputNumber\n                min={1}\n                max={3}\n                value={range[1]}\n                onChange={nextValue => {\n                  const [start, end] = range;\n                  if (start > nextValue) {\n                    return;\n                  }\n                  setRange([start, nextValue]);\n                }}\n              />\n            </InputGroup>\n          </Col>\n        </Row>\n        <YearPicker\n          defaultValue={'Seleziona anno'}\n          start={2020}\n          end={2050}\n          required={true}\n          value={year}\n          onChange={(year) => {\n            if (year != NaN) year = parseInt(year);\n            setYear(year);\n            console.log(year);\n          }}\n          id={'year'}\n          name={'year'}\n          classes={'classes'}\n          optionClasses={'option classes'}\n        />\n\n        <Button\n          // onClick={fetchReportAnnuali()}\n          onClick={() => { fetchReportAnnuali() }}\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          endIcon={<SearchIcon />}\n        >\n          Send\n      </Button>\n\n      </div>\n    )\n\n  }\n\n  function FormMensile() {\n    return (\n      <div className=\"RicercaMensile\">\n\n        <Autocomplete\n          placeholder='Seleziona Sito'\n          value={value}\n          onChange={(event, newValue) => {\n            setValue(newValue);\n          }}\n          id=\"controllable-states-demo\"\n          options={storeName}\n          style={{ width: '20%' }}\n          renderInput={(params) => <TextField {...params} label=\"Seleziona sito\" variant=\"outlined\" />}\n        />\n\n        <Row>\n          <Col md={10}>\n            <RangeSlider\n\n              step={0.1}\n              max={3}\n              min={1}\n              progress\n              style={{ marginTop: 16, marginBottom: 16, width: \"10vw\" }}\n              value={range}\n              onChange={value => {\n                if (value[0] <= value[1]) {\n                  setRange(value);\n                  // console.log(range)\n                }\n              }}\n            />\n          </Col>\n          <Col md={8}>\n            <InputGroup\n              style={{ width: \"15vw\" }}\n            >\n              <InputNumber\n                min={1}\n                max={3}\n                value={range[0]}\n                onChange={nextValue => {\n                  const [start, end] = range;\n                  if (nextValue > end) {\n                    return;\n                  }\n                  setRange([nextValue, end]);\n                }}\n              />\n              <InputGroup.Addon>to</InputGroup.Addon>\n              <InputNumber\n                min={1}\n                max={3}\n                value={range[1]}\n                onChange={nextValue => {\n                  const [start, end] = range;\n                  if (start > nextValue) {\n                    return;\n                  }\n                  setRange([start, nextValue]);\n                }}\n              />\n            </InputGroup>\n          </Col>\n        </Row>\n        <YearPicker\n          defaultValue={'Seleziona anno'}\n          start={2020}\n          end={2050}\n          required={true}\n          value={year}\n          onChange={(year) => {\n            if (year != NaN) year = parseInt(year);\n            setYear(year);\n            console.log(year);\n          }}\n          id={'year'}\n          name={'year'}\n          classes={'classes'}\n          optionClasses={'option classes'}\n        />\n        <MonthPicker\n          defaultValue={'Seleziona mese'}\n          numeric                   // to get months as numbers\n          short                     // default is full name\n          caps                      // default is Titlecase\n          endYearGiven              // mandatory if end={} is given in YearPicker\n          year={year}    // mandatory\n          required={true}           // default is false\n          // disabled={true}           // default is false\n          value={viewmonth}  // mandatory\n          onChange={(month) => {    // mandatory\n            if (month != NaN) var supp = parseInt(month);\n            supp = supp + 1;\n            setMonth(supp);\n            setViewmonth(month);\n            console.log('mese: ', supp);\n          }}\n          id={'month'}\n          name={'month'}\n          classes={'classes'}\n          optionClasses={'option classes'}\n        />\n        <Button\n          onClick={() => { fetchReportMensili() }}\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          endIcon={<SearchIcon />}\n        >\n          Send\n      </Button>\n\n      </div>\n\n    )\n\n  }\n\n  function FormGiornaliero() {\n    return (\n      <div className=\"RicercaMensile\">\n\n        <Autocomplete\n          placeholder='Seleziona Sito'\n          value={value}\n          onChange={(event, newValue) => {\n            setValue(newValue);\n          }}\n          id=\"controllable-states-demo\"\n          options={storeName}\n          style={{ width: '20%' }}\n          renderInput={(params) => <TextField {...params} label=\"Seleziona sito\" variant=\"outlined\" />}\n        />\n\n        <Row>\n          <Col md={10}>\n            <RangeSlider\n\n              step={0.1}\n              max={3}\n              min={1}\n              progress\n              style={{ marginTop: 16, marginBottom: 16, width: \"10vw\" }}\n              value={range}\n              onChange={value => {\n                if (value[0] <= value[1]) {\n                  setRange(value);\n                  // console.log(range)\n                }\n              }}\n            />\n          </Col>\n          <Col md={8}>\n            <InputGroup\n              style={{ width: \"15vw\" }}\n            >\n              <InputNumber\n                min={1}\n                max={3}\n                value={range[0]}\n                onChange={nextValue => {\n                  const [start, end] = range;\n                  if (nextValue > end) {\n                    return;\n                  }\n                  setRange([nextValue, end]);\n                }}\n              />\n              <InputGroup.Addon>to</InputGroup.Addon>\n              <InputNumber\n                min={1}\n                max={3}\n                value={range[1]}\n                onChange={nextValue => {\n                  const [start, end] = range;\n                  if (start > nextValue) {\n                    return;\n                  }\n                  setRange([start, nextValue]);\n                }}\n              />\n            </InputGroup>\n          </Col>\n        </Row>\n        <DatePicker\n          onChange={(value) => {\n            setDate(value);\n          }}\n          value={date}\n        />\n        <Button\n          onClick={() => { fetchReportDate() }}\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          endIcon={<SearchIcon />}\n        >\n          Send\n      </Button>\n\n      </div>)\n  }\n\n\n  return (\n    <div className=\"App Esempio\">\n\n      <Carousel itemsToShow={1}>\n\n        <div className=\"CaroselloHome\">\n          <h2>SITI WEB</h2>\n          {/* <Carousel activeIndex={index} onSelect={handleSelect} interval={null}>\n\n          <Carousel.Item> */}\n\n          <div className={button ? 'Ricerca' : 'RicercaHidden'} >\n            {/* <h4 style={{ letterSpacing: 5 }}>SITI WEB</h4> */}\n\n            {choice == 'Report annuali' ?\n              <FormAnnuale /> : choice == 'Report mensili' ?\n                <FormMensile /> : choice == 'Report giornalieri' ?\n                  <FormGiornaliero /> : choice == 'Last reports' ? <FormLastReports /> : null}\n\n            <FormControl className={classes.formControl}   >\n\n              <InputLabel id=\"demo-simple-select-disabled-label\">Ultimi Report</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={choice}\n                onChange={handleChange}\n                placeholder={choice}\n\n\n              >\n                <MenuItem value={'Report annuali'}>Report annuali</MenuItem>\n                <MenuItem value={'Report mensili'}>Report mensili</MenuItem>\n                <MenuItem value={'Report giornalieri'}>Report giornalieri</MenuItem>\n                <MenuItem value={'Last reports'}>Ultimi Report</MenuItem>\n              </Select>\n            </FormControl>\n          </div>\n\n          <br />\n          <div className=\"ContainerTabella\">\n            <div className=\"Tabella\">\n              {/*console.log('datatable', datatable)*/}\n              {/*  <MDBDataTableV5 hover entriesOptions={[5, 20, 25]}\n                  entries={5} pagesAmount={4} data={datatable} />*/}\n              <DataGrid rows={feedRow()} columns={columns} />\n            </div>\n          </div>\n          {/* </Carousel.Item> */}\n\n          {/* <Carousel.Item>*/}\n          {/* <h4 style={{ letterSpacing: 5 }}>PROFILI SOCIAL</h4> */}\n          {/* <br />\n            <div className=\"ContainerTabella\">\n              <div className=\"Tabella\"> */}\n          {/* <DataGrid rows={siti} columns={columns} /> */}\n          {/* </div>\n            </div> */}\n\n          {/* </Carousel.Item>\n        </Carousel>   */}\n        </div>\n\n        <div className=\"CaroselloHome\">\n          <h2>SOCIAL MEDIA</h2>\n\n        </div>\n      </Carousel>\n    </div>\n  );\n}\n\nexport default Home;\n","/home/tommaso/PycharmProjects/ProgettoLube/ProgettoLube/frontend/dashboard/src/components/Mappa.js",["105","106","107","108","109","110","111","112","113"],"// import Autocomplete from '@material-ui/lab/Autocomplete';\nimport React from 'react';\nimport '../css/App.css';\n// import AutoComplete from \"./Autocomplete\";\n// import Map from \"./MapComponent\";\nimport { useState, useEffect } from 'react';\nimport ReactMapGL, { Marker } from 'react-map-gl';\nimport axios from 'axios';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from \"@material-ui/core/TextField\";\nimport logoLube from '../logoLube.png';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { Link } from 'react-router-dom';\n\n\nfunction Mappa() {\n\n  useEffect(() => {\n    //getResellersName();\n    getResellersPosition();\n  }, []);\n\n\n  function getResellersName() {\n    axios.get(`http://127.0.0.1:5000/resellers/retrieveResellersNames`)\n      .then(res => {\n        const data = res.data;\n        // console.log(data.lista);\n        setStoreName(data.lista)\n      })\n\n  }\n  function getResellersPosition() {\n    axios.get(`http://127.0.0.1:5000/resellers/retrieveResellersPositions`)\n      .then(res => {\n        const data = res.data.lista;\n        var lista = [];\n        data.map(city => {\n          lista.push(city.nome);\n        });\n        setStorePositions(data);\n        setStoreName(lista);\n      })\n\n  }\n\n  function selectStore(newValue) {\n\n    if (newValue != null) {\n      setValue(newValue);\n      let pino = storePositions.find(x => x.nome === newValue);\n      viewport.latitude = pino.latitudine;\n      viewport.longitude = pino.longitudine;\n      viewport.zoom = 11;\n\n    }\n\n  }\n\n  const [storePositions, setStorePositions] = useState();\n  const [storeName, setStoreName] = useState([]);\n  const [value, setValue] = React.useState();\n  const [name, setName] = React.useState();\n  const [latitude, setLatitude] = React.useState();\n  const [longitude, setLongitude] = React.useState();\n  const [viewport, setViewport] = useState({\n    width: \"1000\",\n    height: \"500px\",\n\n    latitude: 43.041040634170734,\n    longitude: 12.65069401829706,\n    zoom: 6,\n\n\n  });\n\n  return (\n    <div className=\"App\">\n      <h1>MAPPA</h1>\n      <div className=\"Container\">\n        <Autocomplete\n          placeholder='Seleziona Sito'\n          value={value}\n          onChange={(event, newValue) => {\n            selectStore(newValue);\n          }}\n          id=\"controllable-states-demo\"\n          options={storeName}\n          style={{ width: '100%' }}\n          renderInput={(params) => <TextField {...params} label=\"Seleziona sito\" variant=\"outlined\" />}\n        />\n\n        <ReactMapGL\n\n          mapStyle='mapbox://styles/stagemtmv/ckjh2rchph5tm19mqudag4i6e'\n          {...viewport}\n          onViewportChange={nextViewport => setViewport(nextViewport)}\n          mapboxApiAccessToken=\"pk.eyJ1Ijoic3RhZ2VtdG12IiwiYSI6ImNramgxZ25jcjk0a3UycWxiYmU1OWZ1ZnIifQ.uy5k7k9bzMeox5fzR3Iz3A\"\n\n        >\n\n          {\n            storePositions && storePositions.map(store => (\n             \n              <Link key={store.nome} to={`/store/${store.nome}`}>\n                <Marker key={store.nome} latitude={store.latitudine} longitude={store.longitudine}><img style={{ width: 50, height: 50 }} src={logoLube}></img></Marker>\n              </Link>\n\n            ))\n          }\n        </ReactMapGL>\n      </div>\n    </div>\n  );\n}\n\nexport default Mappa;\n","/home/tommaso/PycharmProjects/ProgettoLube/ProgettoLube/frontend/dashboard/src/components/DettagliReport.js",["114","115"],"/home/tommaso/PycharmProjects/ProgettoLube/ProgettoLube/frontend/dashboard/src/components/DettagliStore.js",["116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163"],"/home/tommaso/PycharmProjects/ProgettoLube/ProgettoLube/frontend/dashboard/src/components/Pallino.js",[],"/home/tommaso/PycharmProjects/ProgettoLube/ProgettoLube/frontend/dashboard/src/components/Button.js",["164","165","166","167"],{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":7,"column":10,"nodeType":"174","messageId":"175","endLine":7,"endColumn":20},{"ruleId":"172","severity":1,"message":"176","line":8,"column":9,"nodeType":"174","messageId":"175","endLine":8,"endColumn":15},{"ruleId":"177","severity":1,"message":"178","line":30,"column":7,"nodeType":"179","endLine":30,"endColumn":70},{"ruleId":"172","severity":1,"message":"180","line":2,"column":10,"nodeType":"174","messageId":"175","endLine":2,"endColumn":14},{"ruleId":"172","severity":1,"message":"181","line":10,"column":3,"nodeType":"174","messageId":"175","endLine":10,"endColumn":9},{"ruleId":"172","severity":1,"message":"182","line":11,"column":3,"nodeType":"174","messageId":"175","endLine":11,"endColumn":20},{"ruleId":"172","severity":1,"message":"183","line":23,"column":35,"nodeType":"174","messageId":"175","endLine":23,"endColumn":44},{"ruleId":"172","severity":1,"message":"184","line":29,"column":10,"nodeType":"174","messageId":"175","endLine":29,"endColumn":16},{"ruleId":"172","severity":1,"message":"185","line":31,"column":8,"nodeType":"174","messageId":"175","endLine":31,"endColumn":15},{"ruleId":"172","severity":1,"message":"186","line":32,"column":8,"nodeType":"174","messageId":"175","endLine":32,"endColumn":16},{"ruleId":"187","severity":1,"message":"188","line":61,"column":6,"nodeType":"189","endLine":61,"endColumn":8,"suggestions":"190"},{"ruleId":"191","severity":1,"message":"192","line":119,"column":42,"nodeType":"193","messageId":"194","endLine":119,"endColumn":44},{"ruleId":"191","severity":1,"message":"192","line":119,"column":85,"nodeType":"193","messageId":"194","endLine":119,"endColumn":87},{"ruleId":"191","severity":1,"message":"192","line":119,"column":128,"nodeType":"193","messageId":"194","endLine":119,"endColumn":130},{"ruleId":"191","severity":1,"message":"192","line":168,"column":38,"nodeType":"193","messageId":"194","endLine":168,"endColumn":40},{"ruleId":"191","severity":1,"message":"192","line":215,"column":38,"nodeType":"193","messageId":"194","endLine":215,"endColumn":40},{"ruleId":"191","severity":1,"message":"192","line":264,"column":38,"nodeType":"193","messageId":"194","endLine":264,"endColumn":40},{"ruleId":"191","severity":1,"message":"192","line":264,"column":81,"nodeType":"193","messageId":"194","endLine":264,"endColumn":83},{"ruleId":"191","severity":1,"message":"192","line":264,"column":124,"nodeType":"193","messageId":"194","endLine":264,"endColumn":126},{"ruleId":"172","severity":1,"message":"195","line":289,"column":10,"nodeType":"174","messageId":"175","endLine":289,"endColumn":15},{"ruleId":"172","severity":1,"message":"196","line":289,"column":17,"nodeType":"174","messageId":"175","endLine":289,"endColumn":25},{"ruleId":"172","severity":1,"message":"197","line":291,"column":10,"nodeType":"174","messageId":"175","endLine":291,"endColumn":15},{"ruleId":"172","severity":1,"message":"198","line":292,"column":10,"nodeType":"174","messageId":"175","endLine":292,"endColumn":14},{"ruleId":"172","severity":1,"message":"199","line":292,"column":16,"nodeType":"174","messageId":"175","endLine":292,"endColumn":23},{"ruleId":"172","severity":1,"message":"200","line":294,"column":10,"nodeType":"174","messageId":"175","endLine":294,"endColumn":14},{"ruleId":"172","severity":1,"message":"201","line":294,"column":16,"nodeType":"174","messageId":"175","endLine":294,"endColumn":23},{"ruleId":"172","severity":1,"message":"202","line":295,"column":10,"nodeType":"174","messageId":"175","endLine":295,"endColumn":19},{"ruleId":"172","severity":1,"message":"203","line":295,"column":21,"nodeType":"174","messageId":"175","endLine":295,"endColumn":33},{"ruleId":"172","severity":1,"message":"204","line":314,"column":9,"nodeType":"174","messageId":"175","endLine":314,"endColumn":13},{"ruleId":"172","severity":1,"message":"205","line":315,"column":7,"nodeType":"174","messageId":"175","endLine":315,"endColumn":11},{"ruleId":"172","severity":1,"message":"206","line":326,"column":9,"nodeType":"174","messageId":"175","endLine":326,"endColumn":20},{"ruleId":"172","severity":1,"message":"207","line":327,"column":9,"nodeType":"174","messageId":"175","endLine":327,"endColumn":24},{"ruleId":"172","severity":1,"message":"208","line":379,"column":9,"nodeType":"174","messageId":"175","endLine":379,"endColumn":21},{"ruleId":"172","severity":1,"message":"209","line":443,"column":26,"nodeType":"174","messageId":"175","endLine":443,"endColumn":31},{"ruleId":"172","severity":1,"message":"210","line":456,"column":33,"nodeType":"174","messageId":"175","endLine":456,"endColumn":36},{"ruleId":"211","severity":1,"message":"212","line":473,"column":17,"nodeType":"193","messageId":"213","endLine":473,"endColumn":28},{"ruleId":"191","severity":1,"message":"214","line":473,"column":22,"nodeType":"193","messageId":"194","endLine":473,"endColumn":24},{"ruleId":"172","severity":1,"message":"209","line":542,"column":26,"nodeType":"174","messageId":"175","endLine":542,"endColumn":31},{"ruleId":"172","severity":1,"message":"210","line":555,"column":33,"nodeType":"174","messageId":"175","endLine":555,"endColumn":36},{"ruleId":"211","severity":1,"message":"212","line":572,"column":17,"nodeType":"193","messageId":"213","endLine":572,"endColumn":28},{"ruleId":"191","severity":1,"message":"214","line":572,"column":22,"nodeType":"193","messageId":"194","endLine":572,"endColumn":24},{"ruleId":"211","severity":1,"message":"212","line":592,"column":17,"nodeType":"193","messageId":"213","endLine":592,"endColumn":29},{"ruleId":"191","severity":1,"message":"214","line":592,"column":23,"nodeType":"193","messageId":"194","endLine":592,"endColumn":25},{"ruleId":"172","severity":1,"message":"209","line":662,"column":26,"nodeType":"174","messageId":"175","endLine":662,"endColumn":31},{"ruleId":"172","severity":1,"message":"210","line":675,"column":33,"nodeType":"174","messageId":"175","endLine":675,"endColumn":36},{"ruleId":"191","severity":1,"message":"192","line":719,"column":21,"nodeType":"193","messageId":"194","endLine":719,"endColumn":23},{"ruleId":"191","severity":1,"message":"192","line":720,"column":40,"nodeType":"193","messageId":"194","endLine":720,"endColumn":42},{"ruleId":"191","severity":1,"message":"192","line":721,"column":42,"nodeType":"193","messageId":"194","endLine":721,"endColumn":44},{"ruleId":"191","severity":1,"message":"192","line":722,"column":48,"nodeType":"193","messageId":"194","endLine":722,"endColumn":50},{"ruleId":"172","severity":1,"message":"215","line":24,"column":12,"nodeType":"174","messageId":"175","endLine":24,"endColumn":28},{"ruleId":"216","severity":1,"message":"217","line":38,"column":23,"nodeType":"218","messageId":"219","endLine":38,"endColumn":25},{"ruleId":"172","severity":1,"message":"220","line":63,"column":10,"nodeType":"174","messageId":"175","endLine":63,"endColumn":14},{"ruleId":"172","severity":1,"message":"221","line":63,"column":16,"nodeType":"174","messageId":"175","endLine":63,"endColumn":23},{"ruleId":"172","severity":1,"message":"222","line":64,"column":10,"nodeType":"174","messageId":"175","endLine":64,"endColumn":18},{"ruleId":"172","severity":1,"message":"223","line":64,"column":20,"nodeType":"174","messageId":"175","endLine":64,"endColumn":31},{"ruleId":"172","severity":1,"message":"224","line":65,"column":10,"nodeType":"174","messageId":"175","endLine":65,"endColumn":19},{"ruleId":"172","severity":1,"message":"225","line":65,"column":21,"nodeType":"174","messageId":"175","endLine":65,"endColumn":33},{"ruleId":"177","severity":1,"message":"178","line":106,"column":100,"nodeType":"179","endLine":106,"endColumn":154},{"ruleId":"172","severity":1,"message":"180","line":2,"column":10,"nodeType":"174","messageId":"175","endLine":2,"endColumn":14},{"ruleId":"187","severity":1,"message":"226","line":45,"column":8,"nodeType":"189","endLine":45,"endColumn":10,"suggestions":"227"},{"ruleId":"172","severity":1,"message":"180","line":5,"column":10,"nodeType":"174","messageId":"175","endLine":5,"endColumn":14},{"ruleId":"172","severity":1,"message":"181","line":17,"column":5,"nodeType":"174","messageId":"175","endLine":17,"endColumn":11},{"ruleId":"172","severity":1,"message":"182","line":18,"column":5,"nodeType":"174","messageId":"175","endLine":18,"endColumn":22},{"ruleId":"172","severity":1,"message":"183","line":25,"column":35,"nodeType":"174","messageId":"175","endLine":25,"endColumn":44},{"ruleId":"172","severity":1,"message":"184","line":31,"column":10,"nodeType":"174","messageId":"175","endLine":31,"endColumn":16},{"ruleId":"228","severity":1,"message":"229","line":54,"column":5,"nodeType":"230","messageId":"194","endLine":54,"endColumn":9},{"ruleId":"172","severity":1,"message":"231","line":69,"column":11,"nodeType":"174","messageId":"175","endLine":69,"endColumn":15},{"ruleId":"187","severity":1,"message":"232","line":75,"column":8,"nodeType":"189","endLine":75,"endColumn":10,"suggestions":"233"},{"ruleId":"172","severity":1,"message":"208","line":78,"column":11,"nodeType":"174","messageId":"175","endLine":78,"endColumn":23},{"ruleId":"172","severity":1,"message":"234","line":87,"column":12,"nodeType":"174","messageId":"175","endLine":87,"endColumn":16},{"ruleId":"172","severity":1,"message":"235","line":87,"column":18,"nodeType":"174","messageId":"175","endLine":87,"endColumn":25},{"ruleId":"172","severity":1,"message":"195","line":89,"column":12,"nodeType":"174","messageId":"175","endLine":89,"endColumn":17},{"ruleId":"172","severity":1,"message":"196","line":89,"column":19,"nodeType":"174","messageId":"175","endLine":89,"endColumn":27},{"ruleId":"172","severity":1,"message":"236","line":90,"column":12,"nodeType":"174","messageId":"175","endLine":90,"endColumn":21},{"ruleId":"172","severity":1,"message":"237","line":90,"column":23,"nodeType":"174","messageId":"175","endLine":90,"endColumn":35},{"ruleId":"172","severity":1,"message":"197","line":91,"column":12,"nodeType":"174","messageId":"175","endLine":91,"endColumn":17},{"ruleId":"172","severity":1,"message":"198","line":92,"column":12,"nodeType":"174","messageId":"175","endLine":92,"endColumn":16},{"ruleId":"172","severity":1,"message":"199","line":92,"column":18,"nodeType":"174","messageId":"175","endLine":92,"endColumn":25},{"ruleId":"172","severity":1,"message":"238","line":93,"column":12,"nodeType":"174","messageId":"175","endLine":93,"endColumn":17},{"ruleId":"172","severity":1,"message":"239","line":93,"column":19,"nodeType":"174","messageId":"175","endLine":93,"endColumn":27},{"ruleId":"172","severity":1,"message":"200","line":94,"column":12,"nodeType":"174","messageId":"175","endLine":94,"endColumn":16},{"ruleId":"172","severity":1,"message":"201","line":94,"column":18,"nodeType":"174","messageId":"175","endLine":94,"endColumn":25},{"ruleId":"172","severity":1,"message":"202","line":95,"column":12,"nodeType":"174","messageId":"175","endLine":95,"endColumn":21},{"ruleId":"172","severity":1,"message":"203","line":95,"column":23,"nodeType":"174","messageId":"175","endLine":95,"endColumn":35},{"ruleId":"172","severity":1,"message":"240","line":104,"column":12,"nodeType":"174","messageId":"175","endLine":104,"endColumn":17},{"ruleId":"172","severity":1,"message":"241","line":104,"column":19,"nodeType":"174","messageId":"175","endLine":104,"endColumn":27},{"ruleId":"172","severity":1,"message":"220","line":109,"column":12,"nodeType":"174","messageId":"175","endLine":109,"endColumn":16},{"ruleId":"172","severity":1,"message":"221","line":109,"column":18,"nodeType":"174","messageId":"175","endLine":109,"endColumn":25},{"ruleId":"191","severity":1,"message":"192","line":165,"column":46,"nodeType":"193","messageId":"194","endLine":165,"endColumn":48},{"ruleId":"191","severity":1,"message":"192","line":207,"column":46,"nodeType":"193","messageId":"194","endLine":207,"endColumn":48},{"ruleId":"191","severity":1,"message":"192","line":274,"column":46,"nodeType":"193","messageId":"194","endLine":274,"endColumn":48},{"ruleId":"191","severity":1,"message":"192","line":274,"column":89,"nodeType":"193","messageId":"194","endLine":274,"endColumn":91},{"ruleId":"191","severity":1,"message":"192","line":274,"column":132,"nodeType":"193","messageId":"194","endLine":274,"endColumn":134},{"ruleId":"172","severity":1,"message":"209","line":322,"column":44,"nodeType":"174","messageId":"175","endLine":322,"endColumn":49},{"ruleId":"172","severity":1,"message":"210","line":335,"column":51,"nodeType":"174","messageId":"175","endLine":335,"endColumn":54},{"ruleId":"211","severity":1,"message":"212","line":353,"column":29,"nodeType":"193","messageId":"213","endLine":353,"endColumn":40},{"ruleId":"191","severity":1,"message":"214","line":353,"column":34,"nodeType":"193","messageId":"194","endLine":353,"endColumn":36},{"ruleId":"172","severity":1,"message":"209","line":410,"column":44,"nodeType":"174","messageId":"175","endLine":410,"endColumn":49},{"ruleId":"172","severity":1,"message":"210","line":423,"column":51,"nodeType":"174","messageId":"175","endLine":423,"endColumn":54},{"ruleId":"211","severity":1,"message":"212","line":440,"column":29,"nodeType":"193","messageId":"213","endLine":440,"endColumn":40},{"ruleId":"191","severity":1,"message":"214","line":440,"column":34,"nodeType":"193","messageId":"194","endLine":440,"endColumn":36},{"ruleId":"211","severity":1,"message":"212","line":460,"column":29,"nodeType":"193","messageId":"213","endLine":460,"endColumn":41},{"ruleId":"191","severity":1,"message":"214","line":460,"column":35,"nodeType":"193","messageId":"194","endLine":460,"endColumn":37},{"ruleId":"172","severity":1,"message":"209","line":518,"column":44,"nodeType":"174","messageId":"175","endLine":518,"endColumn":49},{"ruleId":"172","severity":1,"message":"210","line":531,"column":51,"nodeType":"174","messageId":"175","endLine":531,"endColumn":54},{"ruleId":"191","severity":1,"message":"192","line":568,"column":33,"nodeType":"193","messageId":"194","endLine":568,"endColumn":35},{"ruleId":"191","severity":1,"message":"192","line":569,"column":54,"nodeType":"193","messageId":"194","endLine":569,"endColumn":56},{"ruleId":"191","severity":1,"message":"192","line":570,"column":58,"nodeType":"193","messageId":"194","endLine":570,"endColumn":60},{"ruleId":"172","severity":1,"message":"242","line":1,"column":8,"nodeType":"174","messageId":"175","endLine":1,"endColumn":13},{"ruleId":"172","severity":1,"message":"180","line":2,"column":9,"nodeType":"174","messageId":"175","endLine":2,"endColumn":13},{"ruleId":"172","severity":1,"message":"243","line":15,"column":11,"nodeType":"174","messageId":"175","endLine":15,"endColumn":27},{"ruleId":"172","severity":1,"message":"244","line":17,"column":11,"nodeType":"174","messageId":"175","endLine":17,"endColumn":26},"no-native-reassign",["245"],"no-negated-in-lhs",["246"],"no-unused-vars","'StepButton' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'ColDef' is defined but never used.","'ValueGetterParams' is defined but never used.","'DayPicker' is defined but never used.","'Slider' is defined but never used.","'Pallino' is defined but never used.","'logoLube' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchLastReports'. Either include it or remove the dependency array.","ArrayExpression",["247"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'posts' is assigned a value but never used.","'setPosts' is assigned a value but never used.","'index' is assigned a value but never used.","'drop' is assigned a value but never used.","'setDrop' is assigned a value but never used.","'siti' is assigned a value but never used.","'setSiti' is assigned a value but never used.","'datatable' is assigned a value but never used.","'setDatatable' is assigned a value but never used.","'list' is assigned a value but never used.","'sito' is defined but never used.","'handleClick' is assigned a value but never used.","'closeMobileMenu' is assigned a value but never used.","'handleSelect' is assigned a value but never used.","'start' is assigned a value but never used.","'end' is assigned a value but never used.","use-isnan","Use the isNaN function to compare with NaN.","comparisonWithNaN","Expected '!==' and instead saw '!='.","'getResellersName' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'latitude' is assigned a value but never used.","'setLatitude' is assigned a value but never used.","'longitude' is assigned a value but never used.","'setLongitude' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["248"],"no-dupe-keys","Duplicate key 'root'.","ObjectExpression","'bull' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchResellerDetails'. Either include it or remove the dependency array.",["249"],"'grid' is assigned a value but never used.","'setGrid' is assigned a value but never used.","'storeName' is assigned a value but never used.","'setStoreName' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'click' is assigned a value but never used.","'setClick' is assigned a value but never used.","'React' is defined but never used.","'checkButtonStyle' is assigned a value but never used.","'checkButtonSize' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},"Update the dependencies array to be: [fetchLastReports]",{"range":"256","text":"257"},"Update the dependencies array to be: [fetchData]",{"range":"258","text":"259"},"Update the dependencies array to be: [fetchResellerDetails]",{"range":"260","text":"261"},[1719,1721],"[fetchLastReports]",[1471,1473],"[fetchData]",[1944,1946],"[fetchResellerDetails]"]