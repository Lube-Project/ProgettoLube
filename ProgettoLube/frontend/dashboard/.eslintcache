[{"C:\\Users\\matti\\git\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\index.js":"1","C:\\Users\\matti\\git\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\reportWebVitals.js":"2","C:\\Users\\matti\\git\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\App.js":"3","C:\\Users\\matti\\git\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\components\\Home.js":"4","C:\\Users\\matti\\git\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\components\\Navbar.js":"5","C:\\Users\\matti\\git\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\components\\Footer.js":"6","C:\\Users\\matti\\git\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\components\\Contact.js":"7","C:\\Users\\matti\\git\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\components\\Dettagli.js":"8","C:\\Users\\matti\\git\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\components\\Mappa.js":"9","C:\\Users\\matti\\git\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\components\\Button.js":"10","C:\\Users\\matti\\git\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\components\\Store.js":"11"},{"size":500,"mtime":1608981576000,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1608981576000,"results":"14","hashOfConfig":"13"},{"size":1018,"mtime":1609758348336,"results":"15","hashOfConfig":"13"},{"size":18467,"mtime":1609750811588,"results":"16","hashOfConfig":"13"},{"size":2012,"mtime":1609518068459,"results":"17","hashOfConfig":"13"},{"size":249,"mtime":1609608244037,"results":"18","hashOfConfig":"13"},{"size":177,"mtime":1609078606000,"results":"19","hashOfConfig":"13"},{"size":918,"mtime":1609513625190,"results":"20","hashOfConfig":"13"},{"size":3350,"mtime":1609760806437,"results":"21","hashOfConfig":"13"},{"size":474,"mtime":1609235117223,"results":"22","hashOfConfig":"13"},{"size":19278,"mtime":1609759426408,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"zwuqb4",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\matti\\git\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\index.js",[],["51","52"],"C:\\Users\\matti\\git\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\reportWebVitals.js",[],"C:\\Users\\matti\\git\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\App.js",[],"C:\\Users\\matti\\git\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\components\\Home.js",["53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89"],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport '../css/App.css';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DatePicker from 'react-date-picker';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  DataGrid,\r\n  ColDef,\r\n  ValueGetterParams,\r\n  CellParams,\r\n  GridApi\r\n} from \"@material-ui/data-grid\";\r\n\r\nimport { Carousel } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios from 'axios';\r\n//import { MDBDataTableV5 } from 'mdbreact';\r\n//import DatePicker from 'react-datepicker';\r\n//import \"react-datepicker/dist/react-datepicker.css\";\r\nimport { YearPicker, MonthPicker, DayPicker } from 'react-dropdown-date';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Slider, RangeSlider, InputNumber, InputGroup, Row, Col } from 'rsuite';\r\nimport 'rsuite/dist/styles/rsuite-default.css';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  root: {\r\n    width: 300,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\nfunction Home() {\r\n\r\n  const classes = useStyles();\r\n\r\n\r\n  /* codice eseguito all'avvio della pagina */\r\n  useEffect(() => {\r\n    // fetchData();\r\n    //fetchPino();\r\n    fetchLastReports();\r\n    fetchResellerNames();\r\n  }, []);\r\n\r\n\r\n\r\n  /* chiamata VERA per richiedere i dati al server */\r\n  const fetchLastReports = async () => {\r\n    axios.get(`http://localhost:5000/reports/retrieveLastReports`)\r\n      .then(res => {\r\n        const reports = res.data.lista;\r\n        //console.log(reports);\r\n        const pino = [\r\n          {\r\n            field: \"\",\r\n            headerName: \"Button\",\r\n            sortable: false,\r\n            width: 100,\r\n            disableClickEventBubbling: true,\r\n            renderCell: (params: CellParams) => {\r\n              const onClick = () => {\r\n                const api: GridApi = params.api;\r\n                const fields = api\r\n                  .getAllColumns()\r\n                  .map((c) => c.field)\r\n                  .filter((c) => c !== \"__check__\" && !!c);\r\n                const thisRow = {};\r\n\r\n                fields.forEach((f) => {\r\n                  thisRow[f] = params.getValue(f);\r\n                });\r\n\r\n                let path = `/${thisRow.id}`;\r\n                return history.push(path);\r\n              };\r\n\r\n              return <Button onClick={onClick}>Dettagli</Button>;\r\n            }\r\n          },\r\n          { field: 'id', headerName: 'id', width: 200, hide: true },\r\n          { field: 'date', headerName: 'Data', width: 200 },\r\n          { field: 'name', headerName: 'Nome', width: 200 },\r\n          { field: 'valutazione', headerName: 'Valutazione', width: '100%' },\r\n        ];\r\n        setColumns(pino);\r\n        setReports(reports);\r\n\r\n      })\r\n\r\n  }\r\n\r\n  const fetchResellerNames = async () => {\r\n    axios.get(`http://localhost:5000/resellers/retrieveResellersNames`)\r\n      .then(res => {\r\n        const data = res.data;\r\n        // console.log(data.lista);\r\n        setStoreName(data.lista)\r\n      })\r\n\r\n  }\r\n\r\n  function feedRow() {\r\n    return reports;\r\n  }\r\n\r\n\r\n\r\n  function getLastReports() {\r\n    fetchLastReports();\r\n    return null;\r\n  }\r\n\r\n  function fetchReportAnnuali() {\r\n    //non ha selezionato il nome dello store\r\n    const pino = [\r\n      { field: 'id', headerName: 'Name', width: 200, },\r\n      { field: 'year', headerName: 'Anno', width: 200 },\r\n      { field: 'valutazione', headerName: 'Valutazione', width: '100%' },\r\n    ];\r\n    if (!value) {\r\n      axios.get(`http://localhost:5000/reports/retrieveYearAverage?year=${year}&range1=${range[0]}&range2=${range[1]}`)\r\n        .then(res => {\r\n          const reports = res.data.lista;\r\n          setReports(reports)\r\n        });\r\n      setColumns(pino);\r\n      return null;\r\n    } else {\r\n      axios.get(`http://localhost:5000/reports/retrieveYearAverageName?year=${year}&name=${value}&range1=${range[0]}&range2=${range[1]}`)\r\n        .then(res => {\r\n          const reports = res.data.lista;\r\n          setReports(reports);\r\n        });\r\n      setColumns(pino);\r\n      return null;\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  /* Hooks */\r\n  const [posts, setPosts] = useState([]);\r\n  const [storeName, setStoreName] = useState([]);\r\n  const [index, setIndex] = useState(0);\r\n  const [drop, setDrop] = useState([]);\r\n  const [value, setValue] = React.useState();\r\n  const [siti, setSiti] = useState([]);\r\n  const [datatable, setDatatable] = useState({});\r\n  const [reports, setReports] = useState([]);\r\n  const [choice, setChoice] = React.useState('');\r\n  const [date, setDate] = useState(new Date());\r\n  const [range, setRange] = useState([1, 3]);\r\n  const [columns, setColumns] = useState([]);\r\n\r\n  const [click,setClick]= useState(false);\r\n  const [button,setButton]= useState(true);\r\n\r\n \r\n\r\n\r\n  const [year, setYear] = useState(0);\r\n  const [month, setMonth] = useState(0);\r\n  const [viewmonth, setViewmonth] = useState(0);\r\n\r\n  /* Variabili */\r\n  const history = useHistory();\r\n  const list = [];\r\n  var sito;\r\n  // function lista(key, value, text) { // costruttore\r\n  //   this.key = value;\r\n  //   this.value = value;\r\n  //   this.text = text;\r\n  // };\r\n  const handleChange = (event) => {\r\n    setChoice(event.target.value);\r\n  };\r\n\r\n\r\n  const handleClick=()=> setClick(!click);\r\n  const closeMobileMenu=()=>setClick(false);\r\n\r\n  const showButton=() =>{\r\n    if(window.innerWidth<=960){\r\n      setButton(false);\r\n    }else{\r\n      setButton(true);\r\n    }\r\n    }\r\n  \r\n  window.addEventListener(\"resize\",showButton);\r\n  /* Liste */\r\n  /*const columns = [\r\n    {\r\n      field: \"\",\r\n      headerName: \"Button\",\r\n      sortable: false,\r\n      width: 100,\r\n      disableClickEventBubbling: true,\r\n      renderCell: (params: CellParams) => {\r\n        const onClick = () => {\r\n          const api: GridApi = params.api;\r\n          const fields = api\r\n            .getAllColumns()\r\n            .map((c) => c.field)\r\n            .filter((c) => c !== \"__check__\" && !!c);\r\n          const thisRow = {};\r\n\r\n          fields.forEach((f) => {\r\n            thisRow[f] = params.getValue(f);\r\n          });\r\n\r\n          let path = `/${thisRow.id}`;\r\n          return history.push(path);\r\n        };\r\n\r\n        return <Button onClick={onClick}>Dettagli</Button>;\r\n      }\r\n    },\r\n    { field: 'id', headerName: 'id', width: 200, hide: true },\r\n    { field: 'date', headerName: 'Data', width: 200 },\r\n    { field: 'name', headerName: 'Nome', width: 200 },\r\n    { field: 'valutazione', headerName: 'Valutazione', width: '100%' },\r\n  ];*/\r\n\r\n  /* creo la lista per il search selection */\r\n  // posts.map(post => (\r\n  //   sito = new lista(post.userId, post.id, post.title),\r\n  //   list.push(sito)\r\n  // ));\r\n\r\n  /* carosello */\r\n  const handleSelect = (selectedIndex, e) => {\r\n    setIndex(selectedIndex);\r\n  };\r\n\r\n  function FormAnnuale() {\r\n    return (\r\n      <div className=\"RicercaAnnuale\">\r\n\r\n        <Autocomplete\r\n          placeholder='Seleziona Sito'\r\n          value={value}\r\n          onChange={(event, newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          id=\"controllable-states-demo\"\r\n          options={storeName}\r\n          style={{ width: '20%' }}\r\n          renderInput={(params) => <TextField {...params} label=\"Seleziona sito\" variant=\"outlined\" />}\r\n        />\r\n       \r\n       <div className=\"InputGroup\">\r\n\r\n        <Row>\r\n          <Col md={10}>\r\n            <RangeSlider\r\n            \r\n              step={0.1}\r\n              max={3}\r\n              min={1}\r\n              progress\r\n              style={{ marginTop: 16, marginBottom:16 }}\r\n              value={range}\r\n              onChange={value => {\r\n                if (value[0] <= value[1]) {\r\n                  setRange(value);\r\n                  // console.log(range)\r\n                }\r\n              }}\r\n            />\r\n          </Col>\r\n          <Col md={8}>\r\n            <InputGroup\r\n              style={{ width: 200 }}\r\n            >\r\n              <InputNumber\r\n                min={1}\r\n                max={3}\r\n                value={range[0]}\r\n                onChange={nextValue => {\r\n                  const [start, end] = range;\r\n                  if (nextValue > end) {\r\n                    return;\r\n                  }\r\n                  setRange([nextValue, end]);\r\n                }}\r\n              />\r\n              <InputGroup.Addon>to</InputGroup.Addon>\r\n              <InputNumber\r\n                min={1}\r\n                max={3}\r\n                value={range[1]}\r\n                onChange={nextValue => {\r\n                  const [start, end] = range;\r\n                  if (start > nextValue) {\r\n                    return;\r\n                  }\r\n                  setRange([start, nextValue]);\r\n                }}\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n        </Row>\r\n        </div>\r\n        <YearPicker \r\n          defaultValue={'Seleziona anno'}\r\n          start={2020}\r\n          end={2050}\r\n          required={true}\r\n          value={year}\r\n          onChange={(year) => {\r\n            if (year != NaN) year = parseInt(year);\r\n            setYear(year);\r\n            console.log(year);\r\n          }}\r\n          id={'year'}\r\n          name={'year'}\r\n          classes={'classes'}\r\n          optionClasses={'option classes'}\r\n        />\r\n\r\n        <Button\r\n          // onClick={fetchReportAnnuali()}\r\n          onClick={() => { fetchReportAnnuali() }}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          endIcon={<SearchIcon />}\r\n        >\r\n          Send\r\n      </Button>\r\n\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n  function FormMensile() {\r\n    return (\r\n      <div className=\"RicercaAnnuale\">\r\n       \r\n        <Autocomplete\r\n          placeholder='Seleziona Sito'\r\n          value={value}\r\n          onChange={(event, newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          id=\"controllable-states-demo\"\r\n          options={storeName}\r\n          style={{ width: '20%' }}\r\n          renderInput={(params) => <TextField {...params} label=\"Seleziona sito\" variant=\"outlined\" />}\r\n        />\r\n          <div className=\"InputGroup\">\r\n          <Row>\r\n          <Col md={10}>\r\n            <RangeSlider\r\n            \r\n              step={0.1}\r\n              max={3}\r\n              min={1}\r\n              progress\r\n              style={{ marginTop: 16, marginBottom:16 }}\r\n              value={range}\r\n              onChange={value => {\r\n                if (value[0] <= value[1]) {\r\n                  setRange(value);\r\n                  // console.log(range)\r\n                }\r\n              }}\r\n            />\r\n          </Col>\r\n          <Col md={8}>\r\n            <InputGroup\r\n              style={{ width: 200 }}\r\n            >\r\n              <InputNumber\r\n                min={1}\r\n                max={3}\r\n                value={range[0]}\r\n                onChange={nextValue => {\r\n                  const [start, end] = range;\r\n                  if (nextValue > end) {\r\n                    return;\r\n                  }\r\n                  setRange([nextValue, end]);\r\n                }}\r\n              />\r\n              <InputGroup.Addon>to</InputGroup.Addon>\r\n              <InputNumber\r\n                min={1}\r\n                max={3}\r\n                value={range[1]}\r\n                onChange={nextValue => {\r\n                  const [start, end] = range;\r\n                  if (start > nextValue) {\r\n                    return;\r\n                  }\r\n                  setRange([start, nextValue]);\r\n                }}\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n        </Row>\r\n        </div>\r\n        <YearPicker \r\n          defaultValue={'Seleziona anno'}\r\n          start={2020}\r\n          end={2050}\r\n          required={true}\r\n          value={year}\r\n          onChange={(year) => {\r\n            if (year != NaN) year = parseInt(year);\r\n            setYear(year);\r\n            console.log(year);\r\n          }}\r\n          id={'year'}\r\n          name={'year'}\r\n          classes={'classes'}\r\n          optionClasses={'option classes'}\r\n        />\r\n        <MonthPicker\r\n          defaultValue={'Seleziona mese'}\r\n          numeric                   // to get months as numbers\r\n          short                     // default is full name\r\n          caps                      // default is Titlecase\r\n          endYearGiven              // mandatory if end={} is given in YearPicker\r\n          year={year}    // mandatory\r\n          required={true}           // default is false\r\n          // disabled={true}           // default is false\r\n          value={viewmonth}  // mandatory\r\n          onChange={(month) => {    // mandatory\r\n            if (month != NaN) var supp = parseInt(month);\r\n            supp = supp + 1;\r\n            setMonth(supp);\r\n            setViewmonth(month);\r\n            console.log('mese: ', supp);\r\n          }}\r\n          id={'month'}\r\n          name={'month'}\r\n          classes={'classes'}\r\n          optionClasses={'option classes'}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          endIcon={<SearchIcon />}\r\n        >\r\n          Send\r\n      </Button>\r\n\r\n      </div>\r\n\r\n    )\r\n\r\n  }\r\n\r\n  function FormGiornaliero() {\r\n    return (\r\n    <div className=\"RicercaAnnuale\">\r\n      \r\n      <Autocomplete\r\n        placeholder='Seleziona Sito'\r\n        value={value}\r\n        onChange={(event, newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n        id=\"controllable-states-demo\"\r\n        options={storeName}\r\n        style={{ width: '20%' }}\r\n        renderInput={(params) => <TextField {...params} label=\"Seleziona sito\" variant=\"outlined\" />}\r\n      />\r\n                <div className=\"InputGroup\">\r\n\r\n                <Row>\r\n          <Col md={10}>\r\n            <RangeSlider\r\n            \r\n              step={0.1}\r\n              max={3}\r\n              min={1}\r\n              progress\r\n              style={{ marginTop: 16, marginBottom:16 }}\r\n              value={range}\r\n              onChange={value => {\r\n                if (value[0] <= value[1]) {\r\n                  setRange(value);\r\n                  // console.log(range)\r\n                }\r\n              }}\r\n            />\r\n          </Col>\r\n          <Col md={8}>\r\n            <InputGroup\r\n              style={{ width: 200 }}\r\n            >\r\n              <InputNumber\r\n                min={1}\r\n                max={3}\r\n                value={range[0]}\r\n                onChange={nextValue => {\r\n                  const [start, end] = range;\r\n                  if (nextValue > end) {\r\n                    return;\r\n                  }\r\n                  setRange([nextValue, end]);\r\n                }}\r\n              />\r\n              <InputGroup.Addon>to</InputGroup.Addon>\r\n              <InputNumber\r\n                min={1}\r\n                max={3}\r\n                value={range[1]}\r\n                onChange={nextValue => {\r\n                  const [start, end] = range;\r\n                  if (start > nextValue) {\r\n                    return;\r\n                  }\r\n                  setRange([start, nextValue]);\r\n                }}\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <DatePicker\r\n        onChange={setDate}\r\n        value={date}\r\n      />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        endIcon={<SearchIcon />}\r\n      >\r\n        Send\r\n      </Button>\r\n\r\n    </div>)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      {/* <div className=\"Titolo\">\r\n        <h3>HOME</h3>\r\n      </div> */}\r\n\r\n      {/* VECCHIO\r\n      posts.map(post => (\r\n        <Link key={post.id} to={`/${post.id}`}>\r\n          <h4 key={post.id} >{post.title}</h4>\r\n        </Link>\r\n      )) */}\r\n\r\n      {/*  , giorno , anno, mese , range valutazione(tra 1 e 3) */}\r\n\r\n      <div className=\"Container\">\r\n\r\n        {/* <Carousel activeIndex={index} onSelect={handleSelect} interval={null}>\r\n\r\n          <Carousel.Item> */}\r\n\r\n<div className={button ? 'Ricerca' : 'RicercaHidden'} >\r\n          {/* <h4 style={{ letterSpacing: 5 }}>SITI WEB</h4> */}\r\n\r\n          {choice == 'Report annuali' ?\r\n            <FormAnnuale /> : choice == 'Report mensili' ?\r\n              <FormMensile /> : choice == 'Report giornalieri' ?\r\n                <FormGiornaliero /> : getLastReports()}\r\n\r\n          <FormControl className={classes.formControl}   >\r\n           \r\n            <InputLabel id=\"demo-simple-select-disabled-label\">Ultimi Report</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              value={choice}\r\n              onChange={handleChange}\r\n              placeholder={choice}\r\n              \r\n\r\n            >\r\n              <MenuItem value={'Report annuali'}>Report annuali</MenuItem>\r\n              <MenuItem value={'Report mensili'}>Report mensili</MenuItem>\r\n              <MenuItem value={'Report giornalieri'}>Report giornalieri</MenuItem>\r\n              <MenuItem value={'Last reports'}>Ultimi Report</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n\r\n        <br />\r\n        <div className=\"ContainerTabella\">\r\n          <div className=\"Tabella\">\r\n            {/*console.log('datatable', datatable)*/}\r\n            {/*  <MDBDataTableV5 hover entriesOptions={[5, 20, 25]}\r\n                  entries={5} pagesAmount={4} data={datatable} />*/}\r\n            <DataGrid rows={feedRow()} columns={columns} />\r\n          </div>\r\n        </div>\r\n        {/* </Carousel.Item> */}\r\n\r\n        {/* <Carousel.Item>*/}\r\n        {/* <h4 style={{ letterSpacing: 5 }}>PROFILI SOCIAL</h4> */}\r\n        {/* <br />\r\n            <div className=\"ContainerTabella\">\r\n              <div className=\"Tabella\"> */}\r\n        {/* <DataGrid rows={siti} columns={columns} /> */}\r\n        {/* </div>\r\n            </div> */}\r\n\r\n        {/* </Carousel.Item>\r\n        </Carousel>   */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\matti\\git\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\components\\Navbar.js",["90","91","92"],"import React, { useState } from 'react';\r\n//import '../css/App.css';\r\nimport '../css/Navbar.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport logoLube from '../logoLube.png';\r\nimport { StepButton } from '@material-ui/core';\r\nimport {Button} from './Button';\r\n\r\n\r\nfunction Navbar() {\r\n  const [click,setClick]= useState(false);\r\n  const [button,setButton]= useState(true);\r\n\r\n  const handleClick=()=> setClick(!click);\r\n  const closeMobileMenu=()=>setClick(false);\r\n\r\n  const showButton=() =>{\r\n    if(window.innerWidth<=960){\r\n      setButton(false);\r\n    }else{\r\n      setButton(true);\r\n    }\r\n    }\r\n  \r\n  window.addEventListener(\"resize\",showButton);\r\n\r\n  const Logo = () => {\r\n    return <div className={button ? 'NavbarLogo' : 'NavbarLogoHidden'} >\r\n      <img src={logoLube} style={{ height: '100%', width: '20%' }} />\r\n     \r\n    </div>\r\n  }\r\n  \r\n  const Title= ()=> {\r\n  return <div className={button ? 'NavbarTitle' : 'NavbarTitleHidden'}> <Link style={{ color: '#fff', textDecoration: 'none' }} to=\"/\" >\r\n  <h1 style={{ fontSize: 65, fontFamily: 'Dancing Script'}}>Dashboard</h1>\r\n  </Link>\r\n  </div>\r\n  }\r\n  \r\n  return (\r\n    <div className=\"Navbar\">\r\n    \r\n    \r\n      <Logo />\r\n      <Title/>\r\n      <div className=\"menu-icon\" onClick={handleClick}>\r\n        <i className={click ? 'fas fa-times' : 'fas fa-bars'}/>\r\n      </div>\r\n\r\n      <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n        <Link style={{ color: '#fff', textDecoration: 'none' }} to=\"/\" onClick={closeMobileMenu}>\r\n          <li className=\"nav-item\">\r\n            Home</li>\r\n        </Link>\r\n        <Link style={{ color: '#fff', textDecoration: 'none' }} to=\"/mappa\" onClick={closeMobileMenu}>\r\n          <li className=\"nav-item\">\r\n            Mappa</li>\r\n        </Link>\r\n        <Link style={{ color: '#fff', textDecoration: 'none' }} to=\"/contact\" onClick={closeMobileMenu}>\r\n          <li className=\"nav-item\">\r\n            Contact</li>\r\n        </Link></ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\Users\\matti\\git\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\components\\Footer.js",[],"C:\\Users\\matti\\git\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\components\\Contact.js",[],"C:\\Users\\matti\\git\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\components\\Dettagli.js",["93","94"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport '../css/App.css';\n\nfunction Dettagli(props) {\n\n    // viene eseguito appena viene caricata la pagina\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const [report, setReport] = useState({});\n\n    // chiamata fake per richiedere i dati \n    const fetchData = async () => {\n        const id = props.match.params.id;\n        axios.get(`http://localhost:5000/reports/findOne?id=${id}`)\n    .then(res => {\n      const report = res.data.lista;\n      console.log(report);\n      setReport(report[0]);\n    })  \n    }\n\n    return (\n        <div className=\"App\">\n\n            <h1>{report.name}</h1>\n            <h3>{report.id}</h3>\n            <h3>{report.date}</h3>\n            <h2>report :</h2>\n            <h3>{report.valutazione}</h3>\n\n        </div>\n    );\n}\n\nexport default Dettagli;\n","C:\\Users\\matti\\git\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\components\\Mappa.js",["95","96","97","98","99","100","101","102","103"],"C:\\Users\\matti\\git\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\components\\Button.js",["104","105","106","107"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst STYLES=['btn--primary','btn--outline'];\r\n\r\nconst SIZES=['btn--medium','btn--large'];\r\n\r\nexport const Button =({\r\n    children,\r\n    type,\r\n    onClick,\r\n    buttonStyle,\r\n    buttonSize\r\n}) =>{\r\n    const checkButtonStyle= STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\r\n\r\n    const checkButtonSize=SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\r\n\r\n    return(console.log(\"ciao\"))\r\n};","C:\\Users\\matti\\git\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\components\\Store.js",["108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148"],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":2,"column":10,"nodeType":"155","messageId":"156","endLine":2,"endColumn":14},{"ruleId":"153","severity":1,"message":"157","line":10,"column":3,"nodeType":"155","messageId":"156","endLine":10,"endColumn":9},{"ruleId":"153","severity":1,"message":"158","line":11,"column":3,"nodeType":"155","messageId":"156","endLine":11,"endColumn":20},{"ruleId":"153","severity":1,"message":"159","line":16,"column":10,"nodeType":"155","messageId":"156","endLine":16,"endColumn":18},{"ruleId":"153","severity":1,"message":"160","line":23,"column":35,"nodeType":"155","messageId":"156","endLine":23,"endColumn":44},{"ruleId":"153","severity":1,"message":"161","line":29,"column":10,"nodeType":"155","messageId":"156","endLine":29,"endColumn":16},{"ruleId":"162","severity":1,"message":"163","line":60,"column":6,"nodeType":"164","endLine":60,"endColumn":8,"suggestions":"165"},{"ruleId":"153","severity":1,"message":"166","line":161,"column":10,"nodeType":"155","messageId":"156","endLine":161,"endColumn":15},{"ruleId":"153","severity":1,"message":"167","line":161,"column":17,"nodeType":"155","messageId":"156","endLine":161,"endColumn":25},{"ruleId":"153","severity":1,"message":"168","line":163,"column":10,"nodeType":"155","messageId":"156","endLine":163,"endColumn":15},{"ruleId":"153","severity":1,"message":"169","line":164,"column":10,"nodeType":"155","messageId":"156","endLine":164,"endColumn":14},{"ruleId":"153","severity":1,"message":"170","line":164,"column":16,"nodeType":"155","messageId":"156","endLine":164,"endColumn":23},{"ruleId":"153","severity":1,"message":"171","line":166,"column":10,"nodeType":"155","messageId":"156","endLine":166,"endColumn":14},{"ruleId":"153","severity":1,"message":"172","line":166,"column":16,"nodeType":"155","messageId":"156","endLine":166,"endColumn":23},{"ruleId":"153","severity":1,"message":"173","line":167,"column":10,"nodeType":"155","messageId":"156","endLine":167,"endColumn":19},{"ruleId":"153","severity":1,"message":"174","line":167,"column":21,"nodeType":"155","messageId":"156","endLine":167,"endColumn":33},{"ruleId":"153","severity":1,"message":"175","line":181,"column":10,"nodeType":"155","messageId":"156","endLine":181,"endColumn":15},{"ruleId":"153","severity":1,"message":"176","line":186,"column":9,"nodeType":"155","messageId":"156","endLine":186,"endColumn":13},{"ruleId":"153","severity":1,"message":"177","line":187,"column":7,"nodeType":"155","messageId":"156","endLine":187,"endColumn":11},{"ruleId":"153","severity":1,"message":"178","line":198,"column":9,"nodeType":"155","messageId":"156","endLine":198,"endColumn":20},{"ruleId":"153","severity":1,"message":"179","line":199,"column":9,"nodeType":"155","messageId":"156","endLine":199,"endColumn":24},{"ruleId":"153","severity":1,"message":"180","line":251,"column":9,"nodeType":"155","messageId":"156","endLine":251,"endColumn":21},{"ruleId":"153","severity":1,"message":"181","line":300,"column":26,"nodeType":"155","messageId":"156","endLine":300,"endColumn":31},{"ruleId":"153","severity":1,"message":"182","line":313,"column":33,"nodeType":"155","messageId":"156","endLine":313,"endColumn":36},{"ruleId":"183","severity":1,"message":"184","line":331,"column":17,"nodeType":"185","messageId":"186","endLine":331,"endColumn":28},{"ruleId":"187","severity":1,"message":"188","line":331,"column":22,"nodeType":"185","messageId":"189","endLine":331,"endColumn":24},{"ruleId":"153","severity":1,"message":"181","line":400,"column":26,"nodeType":"155","messageId":"156","endLine":400,"endColumn":31},{"ruleId":"153","severity":1,"message":"182","line":413,"column":33,"nodeType":"155","messageId":"156","endLine":413,"endColumn":36},{"ruleId":"183","severity":1,"message":"184","line":431,"column":17,"nodeType":"185","messageId":"186","endLine":431,"endColumn":28},{"ruleId":"187","severity":1,"message":"188","line":431,"column":22,"nodeType":"185","messageId":"189","endLine":431,"endColumn":24},{"ruleId":"183","severity":1,"message":"184","line":451,"column":17,"nodeType":"185","messageId":"186","endLine":451,"endColumn":29},{"ruleId":"187","severity":1,"message":"188","line":451,"column":23,"nodeType":"185","messageId":"189","endLine":451,"endColumn":25},{"ruleId":"153","severity":1,"message":"181","line":521,"column":26,"nodeType":"155","messageId":"156","endLine":521,"endColumn":31},{"ruleId":"153","severity":1,"message":"182","line":534,"column":33,"nodeType":"155","messageId":"156","endLine":534,"endColumn":36},{"ruleId":"187","severity":1,"message":"190","line":587,"column":19,"nodeType":"185","messageId":"189","endLine":587,"endColumn":21},{"ruleId":"187","severity":1,"message":"190","line":588,"column":38,"nodeType":"185","messageId":"189","endLine":588,"endColumn":40},{"ruleId":"187","severity":1,"message":"190","line":589,"column":40,"nodeType":"185","messageId":"189","endLine":589,"endColumn":42},{"ruleId":"153","severity":1,"message":"191","line":7,"column":10,"nodeType":"155","messageId":"156","endLine":7,"endColumn":20},{"ruleId":"153","severity":1,"message":"192","line":8,"column":9,"nodeType":"155","messageId":"156","endLine":8,"endColumn":15},{"ruleId":"193","severity":1,"message":"194","line":30,"column":7,"nodeType":"195","endLine":30,"endColumn":70},{"ruleId":"153","severity":1,"message":"154","line":2,"column":10,"nodeType":"155","messageId":"156","endLine":2,"endColumn":14},{"ruleId":"162","severity":1,"message":"196","line":11,"column":8,"nodeType":"164","endLine":11,"endColumn":10,"suggestions":"197"},{"ruleId":"153","severity":1,"message":"198","line":24,"column":12,"nodeType":"155","messageId":"156","endLine":24,"endColumn":28},{"ruleId":"199","severity":1,"message":"200","line":38,"column":23,"nodeType":"201","messageId":"202","endLine":38,"endColumn":25},{"ruleId":"153","severity":1,"message":"203","line":63,"column":10,"nodeType":"155","messageId":"156","endLine":63,"endColumn":14},{"ruleId":"153","severity":1,"message":"204","line":63,"column":16,"nodeType":"155","messageId":"156","endLine":63,"endColumn":23},{"ruleId":"153","severity":1,"message":"205","line":64,"column":10,"nodeType":"155","messageId":"156","endLine":64,"endColumn":18},{"ruleId":"153","severity":1,"message":"206","line":64,"column":20,"nodeType":"155","messageId":"156","endLine":64,"endColumn":31},{"ruleId":"153","severity":1,"message":"207","line":65,"column":10,"nodeType":"155","messageId":"156","endLine":65,"endColumn":19},{"ruleId":"153","severity":1,"message":"208","line":65,"column":21,"nodeType":"155","messageId":"156","endLine":65,"endColumn":33},{"ruleId":"193","severity":1,"message":"194","line":105,"column":100,"nodeType":"195","endLine":105,"endColumn":154},{"ruleId":"153","severity":1,"message":"209","line":1,"column":8,"nodeType":"155","messageId":"156","endLine":1,"endColumn":13},{"ruleId":"153","severity":1,"message":"154","line":2,"column":9,"nodeType":"155","messageId":"156","endLine":2,"endColumn":13},{"ruleId":"153","severity":1,"message":"210","line":15,"column":11,"nodeType":"155","messageId":"156","endLine":15,"endColumn":27},{"ruleId":"153","severity":1,"message":"211","line":17,"column":11,"nodeType":"155","messageId":"156","endLine":17,"endColumn":26},{"ruleId":"153","severity":1,"message":"154","line":2,"column":10,"nodeType":"155","messageId":"156","endLine":2,"endColumn":14},{"ruleId":"153","severity":1,"message":"212","line":4,"column":8,"nodeType":"155","messageId":"156","endLine":4,"endColumn":17},{"ruleId":"153","severity":1,"message":"157","line":10,"column":5,"nodeType":"155","messageId":"156","endLine":10,"endColumn":11},{"ruleId":"153","severity":1,"message":"158","line":11,"column":5,"nodeType":"155","messageId":"156","endLine":11,"endColumn":22},{"ruleId":"153","severity":1,"message":"159","line":16,"column":10,"nodeType":"155","messageId":"156","endLine":16,"endColumn":18},{"ruleId":"153","severity":1,"message":"213","line":18,"column":8,"nodeType":"155","messageId":"156","endLine":18,"endColumn":20},{"ruleId":"153","severity":1,"message":"160","line":23,"column":35,"nodeType":"155","messageId":"156","endLine":23,"endColumn":44},{"ruleId":"153","severity":1,"message":"161","line":29,"column":10,"nodeType":"155","messageId":"156","endLine":29,"endColumn":16},{"ruleId":"153","severity":1,"message":"166","line":136,"column":12,"nodeType":"155","messageId":"156","endLine":136,"endColumn":17},{"ruleId":"153","severity":1,"message":"167","line":136,"column":19,"nodeType":"155","messageId":"156","endLine":136,"endColumn":27},{"ruleId":"153","severity":1,"message":"214","line":137,"column":12,"nodeType":"155","messageId":"156","endLine":137,"endColumn":21},{"ruleId":"153","severity":1,"message":"215","line":137,"column":23,"nodeType":"155","messageId":"156","endLine":137,"endColumn":35},{"ruleId":"153","severity":1,"message":"168","line":138,"column":12,"nodeType":"155","messageId":"156","endLine":138,"endColumn":17},{"ruleId":"153","severity":1,"message":"216","line":138,"column":19,"nodeType":"155","messageId":"156","endLine":138,"endColumn":27},{"ruleId":"153","severity":1,"message":"169","line":139,"column":12,"nodeType":"155","messageId":"156","endLine":139,"endColumn":16},{"ruleId":"153","severity":1,"message":"170","line":139,"column":18,"nodeType":"155","messageId":"156","endLine":139,"endColumn":25},{"ruleId":"153","severity":1,"message":"217","line":140,"column":12,"nodeType":"155","messageId":"156","endLine":140,"endColumn":17},{"ruleId":"153","severity":1,"message":"218","line":140,"column":19,"nodeType":"155","messageId":"156","endLine":140,"endColumn":27},{"ruleId":"153","severity":1,"message":"171","line":141,"column":12,"nodeType":"155","messageId":"156","endLine":141,"endColumn":16},{"ruleId":"153","severity":1,"message":"172","line":141,"column":18,"nodeType":"155","messageId":"156","endLine":141,"endColumn":25},{"ruleId":"153","severity":1,"message":"173","line":142,"column":12,"nodeType":"155","messageId":"156","endLine":142,"endColumn":21},{"ruleId":"153","severity":1,"message":"174","line":142,"column":23,"nodeType":"155","messageId":"156","endLine":142,"endColumn":35},{"ruleId":"153","severity":1,"message":"219","line":149,"column":12,"nodeType":"155","messageId":"156","endLine":149,"endColumn":17},{"ruleId":"153","severity":1,"message":"220","line":149,"column":19,"nodeType":"155","messageId":"156","endLine":149,"endColumn":27},{"ruleId":"153","severity":1,"message":"221","line":150,"column":20,"nodeType":"155","messageId":"156","endLine":150,"endColumn":29},{"ruleId":"153","severity":1,"message":"175","line":156,"column":12,"nodeType":"155","messageId":"156","endLine":156,"endColumn":17},{"ruleId":"153","severity":1,"message":"181","line":201,"column":48,"nodeType":"155","messageId":"156","endLine":201,"endColumn":53},{"ruleId":"153","severity":1,"message":"182","line":214,"column":55,"nodeType":"155","messageId":"156","endLine":214,"endColumn":58},{"ruleId":"183","severity":1,"message":"184","line":232,"column":29,"nodeType":"185","messageId":"186","endLine":232,"endColumn":40},{"ruleId":"187","severity":1,"message":"188","line":232,"column":34,"nodeType":"185","messageId":"189","endLine":232,"endColumn":36},{"ruleId":"153","severity":1,"message":"181","line":291,"column":48,"nodeType":"155","messageId":"156","endLine":291,"endColumn":53},{"ruleId":"153","severity":1,"message":"182","line":304,"column":55,"nodeType":"155","messageId":"156","endLine":304,"endColumn":58},{"ruleId":"183","severity":1,"message":"184","line":322,"column":29,"nodeType":"185","messageId":"186","endLine":322,"endColumn":40},{"ruleId":"187","severity":1,"message":"188","line":322,"column":34,"nodeType":"185","messageId":"189","endLine":322,"endColumn":36},{"ruleId":"183","severity":1,"message":"184","line":342,"column":29,"nodeType":"185","messageId":"186","endLine":342,"endColumn":41},{"ruleId":"187","severity":1,"message":"188","line":342,"column":35,"nodeType":"185","messageId":"189","endLine":342,"endColumn":37},{"ruleId":"153","severity":1,"message":"181","line":402,"column":48,"nodeType":"155","messageId":"156","endLine":402,"endColumn":53},{"ruleId":"153","severity":1,"message":"182","line":415,"column":55,"nodeType":"155","messageId":"156","endLine":415,"endColumn":58},{"ruleId":"187","severity":1,"message":"190","line":468,"column":29,"nodeType":"185","messageId":"189","endLine":468,"endColumn":31},{"ruleId":"187","severity":1,"message":"190","line":469,"column":50,"nodeType":"185","messageId":"189","endLine":469,"endColumn":52},{"ruleId":"187","severity":1,"message":"190","line":470,"column":54,"nodeType":"185","messageId":"189","endLine":470,"endColumn":56},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'ColDef' is defined but never used.","'ValueGetterParams' is defined but never used.","'Carousel' is defined but never used.","'DayPicker' is defined but never used.","'Slider' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchLastReports'. Either include it or remove the dependency array.","ArrayExpression",["224"],"'posts' is assigned a value but never used.","'setPosts' is assigned a value but never used.","'index' is assigned a value but never used.","'drop' is assigned a value but never used.","'setDrop' is assigned a value but never used.","'siti' is assigned a value but never used.","'setSiti' is assigned a value but never used.","'datatable' is assigned a value but never used.","'setDatatable' is assigned a value but never used.","'month' is assigned a value but never used.","'list' is assigned a value but never used.","'sito' is defined but never used.","'handleClick' is assigned a value but never used.","'closeMobileMenu' is assigned a value but never used.","'handleSelect' is assigned a value but never used.","'start' is assigned a value but never used.","'end' is assigned a value but never used.","use-isnan","Use the isNaN function to compare with NaN.","BinaryExpression","comparisonWithNaN","eqeqeq","Expected '!==' and instead saw '!='.","unexpected","Expected '===' and instead saw '=='.","'StepButton' is defined but never used.","'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["225"],"'getResellersName' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'latitude' is assigned a value but never used.","'setLatitude' is assigned a value but never used.","'longitude' is assigned a value but never used.","'setLongitude' is assigned a value but never used.","'React' is defined but never used.","'checkButtonStyle' is assigned a value but never used.","'checkButtonSize' is assigned a value but never used.","'TextField' is defined but never used.","'Autocomplete' is defined but never used.","'storeName' is assigned a value but never used.","'setStoreName' is assigned a value but never used.","'setIndex' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'click' is assigned a value but never used.","'setClick' is assigned a value but never used.","'setButton' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},"Update the dependencies array to be: [fetchLastReports]",{"range":"230","text":"231"},"Update the dependencies array to be: [fetchData]",{"range":"232","text":"233"},[1700,1702],"[fetchLastReports]",[278,280],"[fetchData]"]