[{"C:\\Users\\vitto\\Documents\\GitHub\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\index.js":"1","C:\\Users\\vitto\\Documents\\GitHub\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\App.js":"2","C:\\Users\\vitto\\Documents\\GitHub\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\reportWebVitals.js":"3","C:\\Users\\vitto\\Documents\\GitHub\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\components\\Home.js":"4","C:\\Users\\vitto\\Documents\\GitHub\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\components\\Navbar.js":"5","C:\\Users\\vitto\\Documents\\GitHub\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\components\\Mappa.js":"6","C:\\Users\\vitto\\Documents\\GitHub\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\components\\Contact.js":"7","C:\\Users\\vitto\\Documents\\GitHub\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\components\\Post.js":"8","C:\\Users\\vitto\\Documents\\GitHub\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\components\\Button.js":"9"},{"size":517,"mtime":1608539498401,"results":"10","hashOfConfig":"11"},{"size":756,"mtime":1609150568794,"results":"12","hashOfConfig":"11"},{"size":375,"mtime":1608539498403,"results":"13","hashOfConfig":"11"},{"size":2379,"mtime":1609093536267,"results":"14","hashOfConfig":"11"},{"size":2012,"mtime":1609168091790,"results":"15","hashOfConfig":"11"},{"size":183,"mtime":1609093536269,"results":"16","hashOfConfig":"11"},{"size":189,"mtime":1609093536266,"results":"17","hashOfConfig":"11"},{"size":802,"mtime":1609093536271,"results":"18","hashOfConfig":"11"},{"size":474,"mtime":1609152295651,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1xjg33z",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"C:\\Users\\vitto\\Documents\\GitHub\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\index.js",[],["42","43"],"C:\\Users\\vitto\\Documents\\GitHub\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\App.js",[],"C:\\Users\\vitto\\Documents\\GitHub\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\reportWebVitals.js",[],"C:\\Users\\vitto\\Documents\\GitHub\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\components\\Home.js",["44","45","46"],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport '../css/App.css';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {\r\n  DataGrid,\r\n  ColDef,\r\n  ValueGetterParams,\r\n  CellParams,\r\n  GridApi\r\n} from \"@material-ui/data-grid\";\r\n\r\nfunction Home() {\r\n\r\n  // viene eseguito appena viene caricata la pagina\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  \r\n  const history = useHistory();\r\n\r\n  // chiamata fake per richiedere i dati \r\n  const fetchData = async () => {\r\n    const rawData = await fetch('https://jsonplaceholder.typicode.com/posts');\r\n\r\n    // adesso trasformo i dati ricevuti in json\r\n    const data = await rawData.json();\r\n\r\n    const posts = data.slice(0, 10);    // con slice prendiamo solo i primi 10 elementi dell'array\r\n    console.log(posts);\r\n\r\n    setPosts(posts);\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      field: \"\",\r\n      headerName: \"Button\",\r\n      sortable: false,\r\n      width: 100,\r\n      disableClickEventBubbling: true,\r\n      renderCell: (params: CellParams) => {\r\n        const onClick = () => {\r\n          const api: GridApi = params.api;\r\n          const fields = api\r\n            .getAllColumns()\r\n            .map((c) => c.field)\r\n            .filter((c) => c !== \"__check__\" && !!c);\r\n          const thisRow = {};\r\n\r\n          fields.forEach((f) => {\r\n            thisRow[f] = params.getValue(f);\r\n          });\r\n\r\n          let path = `/${thisRow.id}`;\r\n          return history.push(path);\r\n        };\r\n\r\n        return <Button onClick={onClick}>Dettagli</Button>;\r\n      }\r\n    },\r\n    { field: 'userId', headerName: 'Nome', width: 200 },\r\n    { field: 'id', headerName: 'Data', width: 200 },\r\n    { field: 'title', headerName: 'Correttezza', width: 200 },\r\n    { field: 'body', headerName: 'Dettagli', width: '100%' },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>HOME</h1>\r\n\r\n      <h2>Carosello</h2>\r\n      <h2>SITI | SOCIAL</h2>\r\n\r\n      <div className=\"ContainerTabella\">\r\n        <div className=\"Tabella\">\r\n          <DataGrid rows={posts} columns={columns} />\r\n        </div>\r\n      </div>\r\n\r\n      {/* posts.map(post => (\r\n        <Link key={post.id} to={`/${post.id}`}>\r\n          <h4 key={post.id} >{post.title}</h4>\r\n        </Link>\r\n      )) */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\vitto\\Documents\\GitHub\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\components\\Navbar.js",["47","48","49"],"C:\\Users\\vitto\\Documents\\GitHub\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\components\\Mappa.js",[],"C:\\Users\\vitto\\Documents\\GitHub\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\components\\Contact.js",[],"C:\\Users\\vitto\\Documents\\GitHub\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\components\\Post.js",["50","51"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../css/App.css';\r\n\r\nfunction Post(props) {\r\n\r\n    // viene eseguito appena viene caricata la pagina\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    const [post, setPost] = useState({});\r\n\r\n    // chiamata fake per richiedere i dati \r\n    const fetchData = async () => {\r\n        const id = props.match.params.id;\r\n        const rawData = await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`);\r\n        const post = await rawData.json();\r\n\r\n        console.log(post);\r\n\r\n        setPost(post);\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n\r\n            <h1>{post.title}</h1>\r\n            <h3>{post.body}</h3>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n","C:\\Users\\vitto\\Documents\\GitHub\\ProgettoLube\\ProgettoLube\\frontend\\dashboard\\src\\components\\Button.js",["52","53","54","55"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst STYLES=['btn--primary','btn--outline'];\r\n\r\nconst SIZES=['btn--medium','btn--large'];\r\n\r\nexport const Button =({\r\n    children,\r\n    type,\r\n    onClick,\r\n    buttonStyle,\r\n    buttonSize\r\n}) =>{\r\n    const checkButtonStyle= STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\r\n\r\n    const checkButtonSize=SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\r\n\r\n    return(console.log(\"ciao\"))\r\n};",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":2,"column":10,"nodeType":"62","messageId":"63","endLine":2,"endColumn":14},{"ruleId":"60","severity":1,"message":"64","line":7,"column":3,"nodeType":"62","messageId":"63","endLine":7,"endColumn":9},{"ruleId":"60","severity":1,"message":"65","line":8,"column":3,"nodeType":"62","messageId":"63","endLine":8,"endColumn":20},{"ruleId":"60","severity":1,"message":"66","line":7,"column":10,"nodeType":"62","messageId":"63","endLine":7,"endColumn":20},{"ruleId":"60","severity":1,"message":"67","line":8,"column":9,"nodeType":"62","messageId":"63","endLine":8,"endColumn":15},{"ruleId":"68","severity":1,"message":"69","line":30,"column":7,"nodeType":"70","endLine":30,"endColumn":70},{"ruleId":"60","severity":1,"message":"61","line":2,"column":10,"nodeType":"62","messageId":"63","endLine":2,"endColumn":14},{"ruleId":"71","severity":1,"message":"72","line":10,"column":8,"nodeType":"73","endLine":10,"endColumn":10,"suggestions":"74"},{"ruleId":"60","severity":1,"message":"75","line":1,"column":8,"nodeType":"62","messageId":"63","endLine":1,"endColumn":13},{"ruleId":"60","severity":1,"message":"61","line":2,"column":9,"nodeType":"62","messageId":"63","endLine":2,"endColumn":13},{"ruleId":"60","severity":1,"message":"76","line":15,"column":11,"nodeType":"62","messageId":"63","endLine":15,"endColumn":27},{"ruleId":"60","severity":1,"message":"77","line":17,"column":11,"nodeType":"62","messageId":"63","endLine":17,"endColumn":26},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'ColDef' is defined but never used.","'ValueGetterParams' is defined but never used.","'StepButton' is defined but never used.","'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["80"],"'React' is defined but never used.","'checkButtonStyle' is assigned a value but never used.","'checkButtonSize' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},"Update the dependencies array to be: [fetchData]",{"range":"83","text":"84"},[256,258],"[fetchData]"]